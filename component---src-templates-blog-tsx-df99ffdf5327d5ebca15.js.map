{"version":3,"sources":["webpack://fabrizioduroni.it/./src/components/BlogHeader.tsx","webpack://fabrizioduroni.it/./src/components/Masthead.tsx","webpack://fabrizioduroni.it/./src/utils/blog-authors.ts","webpack://fabrizioduroni.it/./src/components/PostAuthors.tsx","webpack://fabrizioduroni.it/./src/components/PostMeta.tsx","webpack://fabrizioduroni.it/./src/templates/blog.tsx"],"names":["BlogHeader","trackingCategory","className","S","imgClassName","src","alt","width","height","onClick","track","tracking","href","MastheadItem","trackingAction","label","url","active","Link","to","Masthead","pathname","blogAuthors","fabrizio_duroni","name","image","francesco_bonfadelli","alessandro_romano","emanuele_ianni","tommaso_resti","mariano_patafio","angelo_sciarra","giordano_tamburrelli","felice_giovinazzo","marco_delucchi","PostAuthors","authors","trackingLabel","enableUrl","blogAuthorsImages","useStaticQuery","map","author","blogAuthor","blogAuthorImage","allFile","edges","find","node","replace","childImageSharp","gatsbyImageData","key","Math","floor","random","G","style","marginRight","PostMeta","date","readingTime","data","location","pageContext","posts","allMarkdownRemark","currentPage","isFirst","isLast","numberOfPages","prevPage","toString","nextPage","siteMetadata","site","featuredImage","pageType","imageUrl","protocol","host","post","frontMatter","frontmatter","fields","slug","title","text","description"],"mappings":"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","file":"component---src-templates-blog-tsx-df99ffdf5327d5ebca15.js","sourcesContent":["import React from \"react\";\nimport { track, tracking } from \"../utils/tracking\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n\ninterface BlogHeaderProps {\n  trackingCategory: string;\n}\n\nexport const BlogHeader: React.FC<BlogHeaderProps> = ({ trackingCategory }) => (\n  <div className=\"blog-header d-flex flex-row align-items-center\">\n    <StaticImage\n      className={\"mr-2\"}\n      imgClassName=\"img-responsive blog-logo\"\n      src={\"../images/blog-logo.jpg\"}\n      alt={\"blog logo\"}\n      width={80}\n      height={80}\n    />\n    <div className=\"d-flex flex-column\">\n      <h1 className=\"blog-title\">\n        <a\n          onClick={() => {\n            track(\n              tracking.action.open_blog,\n              trackingCategory,\n              tracking.label.header\n            );\n          }}\n          href=\"/blog/\"\n        >\n          CHICIO CODING\n        </a>\n      </h1>\n      <h2 className=\"lead blog-description\">\n        Dirty clean code. Creative Stuff. Stuff.\n      </h2>\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport { track, tracking } from \"../utils/tracking\";\nimport { Link } from \"gatsby\";\n\ninterface MastheadItemProps {\n  trackingAction: string;\n  trackingCategory: string;\n  label: string;\n  url: string;\n  active: boolean;\n}\n\nexport const MastheadItem: React.FC<MastheadItemProps> = ({\n  trackingAction,\n  trackingCategory,\n  label,\n  url,\n  active,\n}) => (\n  <Link\n    className={`blog-nav-item ${active ? \"active\" : \"\"}`}\n    onClick={() => {\n      track(trackingAction, trackingCategory, tracking.label.header);\n    }}\n    to={url}\n  >\n    {label}\n  </Link>\n);\n\ninterface MastheadProps {\n  trackingCategory: string;\n  pathname: string;\n}\n\nexport const Masthead: React.FC<MastheadProps> = ({\n  trackingCategory,\n  pathname,\n}) => (\n  <div className=\"blog-masthead\">\n    <div className=\"container\">\n      <nav className=\"d-flex align-items-center blog-nav\">\n        <MastheadItem\n          trackingAction={tracking.action.open_home}\n          trackingCategory={trackingCategory}\n          label={\"Home\"}\n          url=\"/\"\n          active={pathname === \"/\"}\n        />\n        <MastheadItem\n          trackingAction={tracking.action.open_blog}\n          trackingCategory={trackingCategory}\n          label={\"Blog\"}\n          url=\"/blog/\"\n          active={pathname !== \"/2017/05/10/about-me/\"}\n        />\n        <MastheadItem\n          trackingAction={tracking.action.open_about_me}\n          trackingCategory={trackingCategory}\n          label={\"About me\"}\n          url=\"/2017/05/10/about-me/\"\n          active={pathname === \"/2017/05/10/about-me/\"}\n        />\n      </nav>\n    </div>\n  </div>\n);\n","export interface BlogAuthor {\n  name: string;\n  url: string;\n  image: string;\n}\n\nexport const blogAuthors: { [authorName: string]: BlogAuthor } = {\n  fabrizio_duroni: {\n    name: \"Fabrizio Duroni\",\n    url: \"https://www.fabrizioduroni.it\",\n    image: \"fabrizio-duroni-small.jpg\",\n  },\n  francesco_bonfadelli: {\n    name: \"Francesco Bonfadelli\",\n    url: \"https://www.linkedin.com/in/fbonfadelli/\",\n    image: \"francesco-bonfadelli.jpg\",\n  },\n  alessandro_romano: {\n    name: \"Alessandro Romano\",\n    url: \"https://www.linkedin.com/in/alessandroromano92/\",\n    image: \"alessandro-romano.jpg\",\n  },\n  emanuele_ianni: {\n    name: \"Emanuele Ianni\",\n    url: \"https://www.linkedin.com/in/emanueleianni/\",\n    image: \"emanuele-ianni.jpg\",\n  },\n  tommaso_resti: {\n    name: \"Tommaso Resti\",\n    url: \"https://www.linkedin.com/in/tommaso-resti-0ab5285a/\",\n    image: \"tommaso-resti.jpg\",\n  },\n  mariano_patafio: {\n    name: \"Mariano Patafio\",\n    url: \"https://www.linkedin.com/in/mariano-patafio-4a8b7426/\",\n    image: \"mariano-patafio.jpg\",\n  },\n  angelo_sciarra: {\n    name: \"Angelo Sciarra\",\n    url: \"https://www.linkedin.com/in/angelosciarra/\",\n    image: \"angelo-sciarra.jpg\",\n  },\n  giordano_tamburrelli: {\n    name: \"Giordano Tamburrelli\",\n    url: \"https://www.linkedin.com/in/giordano-tamburrelli-b532334/\",\n    image: \"giordano-tamburrelli.jpg\",\n  },\n  felice_giovinazzo: {\n    name: \"Felice Giovinazzo\",\n    url: \"https://www.linkedin.com/in/felice-giovinazzo-17277b55/\",\n    image: \"felice-giovinazzo.jpg\",\n  },\n  marco_delucchi: {\n    name: \"Marco De Lucchi\",\n    url: \"https://www.linkedin.com/in/marcodelucchi/\",\n    image: \"marco-delucchi.jpg\",\n  },\n};\n","import React from \"react\";\nimport { track, tracking } from \"../utils/tracking\";\nimport { BlogAuthor, blogAuthors } from \"../utils/blog-authors\";\nimport { AuthorsImagesQuery, Maybe } from \"../../graphql-types\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\ninterface PostAuthorsProps {\n  authors: Maybe<string>[];\n  trackingCategory: string;\n  trackingLabel: string;\n  enableUrl: boolean;\n}\n\nexport const PostAuthors: React.FC<PostAuthorsProps> = ({\n  authors,\n  trackingCategory,\n  trackingLabel,\n  enableUrl,\n}) => {\n  const blogAuthorsImages = useStaticQuery<AuthorsImagesQuery>(graphql`\n    query AuthorsImages {\n      allFile(\n        filter: {\n          relativeDirectory: { eq: \"authors\" }\n          extension: { regex: \"/(jpg)|(jpeg)|(png)/\" }\n        }\n      ) {\n        edges {\n          node {\n            childImageSharp {\n              gatsbyImageData(layout: FULL_WIDTH)\n            }\n            name\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <div className=\"blog-post-authors d-inline-flex flex-column\">\n      {authors.map((author) => {\n        const blogAuthor: BlogAuthor = blogAuthors[author!];\n        const blogAuthorImage = blogAuthorsImages.allFile.edges.find(\n          (blogAuthorImage) =>\n            blogAuthorImage.node.name === author!.replace(\"_\", \"-\")\n        )!.node!.childImageSharp!.gatsbyImageData!;\n\n        return (\n          <div\n            className=\"blog-post-author d-inline-flex flex-row align-items-center\"\n            key={`${author}${Math.floor(Math.random() * 100)}`}\n          >\n            <GatsbyImage\n              alt={blogAuthor.name}\n              image={blogAuthorImage}\n              style={{ width: 30, height: 30, marginRight: \"5px\" }}\n              imgClassName={\"rounded-circle\"}\n            />\n            <span>\n              {enableUrl && (\n                <a\n                  onClick={() =>\n                    track(\n                      tracking.action.open_blog_author,\n                      trackingCategory,\n                      trackingLabel\n                    )\n                  }\n                  href={blogAuthor.url}\n                >\n                  {blogAuthor.name}\n                </a>\n              )}\n              {!enableUrl && blogAuthor.name}\n            </span>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import React from \"react\";\n\ninterface PostMetaProps {\n  date: string;\n  readingTime: string;\n}\n\nexport const PostMeta: React.FC<PostMetaProps> = ({ date, readingTime }) => (\n  <p className=\"blog-post-meta\">\n    {date} · {readingTime}\n  </p>\n);\n","import * as React from \"react\";\nimport \"@fortawesome/fontawesome-svg-core/styles.css\";\nimport \"../styles/style.blog.home.scss\";\nimport { graphql, Link, PageProps } from \"gatsby\";\nimport { Masthead } from \"../components/Masthead\";\nimport { track, tracking } from \"../utils/tracking\";\nimport { BlogHeader } from \"../components/BlogHeader\";\nimport { Footer } from \"../components/Footer\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport { BlogListQuery } from \"../../graphql-types\";\nimport { PostAuthors } from \"../components/PostAuthors\";\nimport { PostMeta } from \"../components/PostMeta\";\nimport { Head } from \"../components/Head\";\n\ninterface BlogPageContext {\n  limit: number;\n  skip: number;\n  numberOfPages: number;\n  currentPage: number;\n}\n\nconst Blog: React.FC<PageProps<BlogListQuery, BlogPageContext>> = ({\n  data,\n  location,\n  pageContext,\n}) => {\n  const posts = data.allMarkdownRemark.edges;\n  const { currentPage, numberOfPages } = pageContext;\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numberOfPages;\n  const prevPage = `/blog/${\n    currentPage - 1 === 1 ? \"\" : (currentPage - 1).toString()\n  }`;\n  const nextPage = `/blog/${(currentPage + 1).toString()}`;\n  const siteMetadata = data.site!.siteMetadata!;\n  const author = siteMetadata.author!;\n  const featuredImage = siteMetadata.featuredImage!;\n\n  return (\n    <main>\n      <Head\n        url={location.href}\n        pageType={\"website\"}\n        imageUrl={`${location.protocol}//${location.host}/${featuredImage}`}\n      />\n      <Masthead\n        trackingCategory={tracking.category.blog_home}\n        pathname={location.pathname}\n      />\n      <div className=\"container blog-posts\">\n        <BlogHeader trackingCategory={tracking.category.blog_home} />\n        <div className=\"blog-main\">\n          <div className=\"blog-posts-list\">\n            {posts.map((post) => {\n              const frontMatter = post.node.frontmatter!;\n              return (\n                <div className=\"blog-posts-post\" key={post.node.fields!.slug}>\n                  <Link\n                    to={post.node.fields!.slug!}\n                    onClick={() => {\n                      track(\n                        tracking.action.open_blog_post,\n                        tracking.category.blog_home,\n                        tracking.label.body\n                      );\n                    }}\n                    className=\"blog-posts-post-link\"\n                  >\n                    <span className=\"blog-posts-post-title\">\n                      {frontMatter.title}\n                    </span>\n                    <div className=\"blog-posts-post-img-container\">\n                      <GatsbyImage\n                        className={\"img blog-posts-post-img\"}\n                        alt={frontMatter.title!}\n                        image={\n                          frontMatter.image!.childImageSharp!.gatsbyImageData\n                        }\n                      />\n                    </div>\n                    <PostAuthors\n                      authors={frontMatter.authors!}\n                      trackingCategory={tracking.category.blog_home}\n                      trackingLabel={tracking.label.body}\n                      enableUrl={false}\n                    />\n                    <PostMeta\n                      date={frontMatter.date!}\n                      readingTime={post.node.fields!.readingTime!.text!}\n                    />\n                    <span className=\"blog-posts-post-description\">\n                      {frontMatter.description!}\n                    </span>\n                  </Link>\n                </div>\n              );\n            })}\n          </div>\n          <div className=\"d-flex flex-row justify-content-center\">\n            {!isFirst && (\n              <Link\n                className=\"btn blog-pages-button\"\n                onClick={() => {\n                  track(\n                    tracking.action.open_blog_previous_page,\n                    tracking.category.blog_home,\n                    tracking.label.body\n                  );\n                }}\n                to={prevPage}\n              >\n                Previous\n              </Link>\n            )}\n            {!isLast && (\n              <Link\n                className=\"btn blog-pages-button\"\n                onClick={() => {\n                  track(\n                    tracking.action.open_blog_next_page,\n                    tracking.category.blog_home,\n                    tracking.label.body\n                  );\n                }}\n                to={nextPage}\n              >\n                Next\n              </Link>\n            )}\n          </div>\n        </div>\n      </div>\n      <Footer\n        author={author}\n        trackingCategory={tracking.category.blog_home}\n        trackingLabel={tracking.label.footer}\n      />\n    </main>\n  );\n};\n\nexport default Blog;\n\nexport const blogListQuery = graphql`\n  query BlogList($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          frontmatter {\n            title\n            description\n            authors\n            date(formatString: \"DD MMM YYYY\")\n            image {\n              childImageSharp {\n                gatsbyImageData(layout: FULL_WIDTH)\n              }\n            }\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        author\n        featuredImage\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}
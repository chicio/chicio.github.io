{"version":3,"sources":["webpack://fabrizioduroni.it/./src/components/design-system/atoms/heading2.tsx","webpack://fabrizioduroni.it/./src/components/design-system/atoms/heading4.tsx","webpack://fabrizioduroni.it/./src/components/design-system/atoms/syntax.tsx","webpack://fabrizioduroni.it/./src/components/post-content.tsx","webpack://fabrizioduroni.it/./src/templates/post.tsx"],"names":["Heading2","styled","props","theme","fontSizes","headingStyle","heading4Style","css","Heading4","syntax","PostContentContainer","light","primaryTextColor","lineHeight","heading3Style","standardLinkStyle","secondaryTextColor","spacing","dividerColor","dark","PostContent","html","dangerouslySetInnerHTML","__html","PostTitle","RecentPosts","loadable","PostTags","Comments","Post","data","location","post","markdownRemark","title","frontmatter","math","require","getCurrentLocationFrom","author","site","siteMetadata","ogPageType","OgPageType","ogImage","getSrc","image","childImageSharp","gatsbyImageData","trackingCategory","tracking","customTitle","description","date","className","authors","trackingLabel","enableUrl","readingTime","fields","text","tags","currentSlug","pathname","comments","url","href","query"],"mappings":"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","file":"component---src-templates-post-tsx-2467fcf4cbd35cf9042a.js","sourcesContent":["import styled from \"styled-components\";\nimport { headingStyle } from \"./heading-style\";\n\nexport const Heading2 = styled.h2`\n  font-size: ${(props) => props.theme.fontSizes[10]};\n  ${headingStyle}\n`;\n","import styled, { css } from \"styled-components\";\nimport { headingStyle } from \"./heading-style\";\n\nexport const heading4Style = css`\n  font-size: ${(props) => props.theme.fontSizes[8]};\n  ${headingStyle}\n`;\n\nexport const Heading4 = styled.h4`\n  ${heading4Style}\n`;\n","import { css } from \"styled-components\";\n\nexport const syntax = css`\n  /**\n   * xonokai theme for JavaScript, CSS and HTML\n   * based on: https://github.com/MoOx/sass-prism-theme-base by Maxime Thirouin ~ MoOx --> http://moox.fr/ , which is Loosely based on Monokai textmate theme by http://www.monokai.nl/\n   * license: MIT; http://moox.mit-license.org/\n   */\n  code[class*=\"language-\"],\n  pre[class*=\"language-\"] {\n    -moz-tab-size: 2;\n    -o-tab-size: 2;\n    tab-size: 2;\n    -webkit-hyphens: none;\n    -moz-hyphens: none;\n    -ms-hyphens: none;\n    hyphens: none;\n    white-space: pre;\n    white-space: pre-wrap;\n    word-wrap: normal;\n    font-family: Menlo, Monaco, \"Courier New\", monospace;\n    font-size: 14px;\n    color: #76d9e6;\n    text-shadow: none;\n    background: #2a2a2a;\n  }\n\n  pre > code[class*=\"language-\"] {\n    font-size: 1em;\n  }\n\n  code[class*=\"language-text\"] {\n    border-radius: 2px;\n    padding: 3px;\n  }\n\n  pre[class*=\"language-\"] {\n    padding: 15px;\n    border-radius: 4px;\n    border: 1px solid #e1e1e8;\n    overflow: auto;\n    position: relative;\n  }\n\n  pre[class*=\"language-\"] code {\n    white-space: pre;\n    display: block;\n  }\n\n  :not(pre) > code[class*=\"language-\"] {\n    padding: 0.15em 0.2em 0.05em;\n    border-radius: 0.3em;\n    border: 0.13em solid #7a6652;\n    box-shadow: 1px 1px 0.3em -0.1em #000 inset;\n  }\n\n  .token.namespace {\n    opacity: 0.7;\n  }\n\n  .token.comment,\n  .token.prolog,\n  .token.doctype,\n  .token.cdata {\n    color: #6f705e;\n  }\n\n  .token.operator,\n  .token.boolean,\n  .token.number {\n    color: #a77afe;\n  }\n\n  .token.attr-name,\n  .token.string {\n    color: #e6d06c;\n  }\n\n  .token.entity,\n  .token.url,\n  .language-css .token.string,\n  .style .token.string {\n    color: #e6d06c;\n  }\n\n  .token.selector,\n  .token.inserted {\n    color: #a6e22d;\n  }\n\n  .token.atrule,\n  .token.attr-value,\n  .token.keyword,\n  .token.important,\n  .token.deleted {\n    color: #ef3b7d;\n  }\n\n  .token.regex,\n  .token.statement {\n    color: #76d9e6;\n  }\n\n  .token.placeholder,\n  .token.variable {\n    color: #fff;\n  }\n\n  .token.important,\n  .token.statement,\n  .token.bold {\n    font-weight: bold;\n  }\n\n  .token.punctuation {\n    color: #bebec5;\n  }\n\n  .token.entity {\n    cursor: help;\n  }\n\n  .token.italic {\n    font-style: italic;\n  }\n\n  code.language-markup {\n    color: #f9f9f9;\n  }\n\n  code.language-markup .token.tag {\n    color: #ef3b7d;\n  }\n\n  code.language-markup .token.attr-name {\n    color: #a6e22d;\n  }\n\n  code.language-markup .token.attr-value {\n    color: #e6d06c;\n  }\n\n  code.language-markup .token.style,\n  code.language-markup .token.script {\n    color: #76d9e6;\n  }\n\n  code.language-markup .token.script .token.keyword {\n    color: #76d9e6;\n  }\n\n  /* Line highlight plugin */\n  pre[class*=\"language-\"][data-line] {\n    position: relative;\n    padding: 1em 0 1em 3em;\n  }\n\n  pre[data-line] .line-highlight {\n    position: absolute;\n    left: 0;\n    right: 0;\n    padding: 0;\n    margin-top: 1em;\n    background: rgba(255, 255, 255, 0.08);\n    pointer-events: none;\n    line-height: inherit;\n    white-space: pre;\n  }\n\n  pre[data-line] .line-highlight:before,\n  pre[data-line] .line-highlight[data-end]:after {\n    content: attr(data-start);\n    position: absolute;\n    top: 0.4em;\n    left: 0.6em;\n    min-width: 1em;\n    padding: 0.2em 0.5em;\n    background-color: rgba(255, 255, 255, 0.4);\n    color: black;\n    font: bold 65%/1 sans-serif;\n    height: 1em;\n    line-height: 1em;\n    text-align: center;\n    border-radius: 999px;\n    text-shadow: none;\n    box-shadow: 0 1px 1px rgba(255, 255, 255, 0.7);\n  }\n\n  pre[data-line] .line-highlight[data-end]:after {\n    content: attr(data-end);\n    top: auto;\n    bottom: 0.4em;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { heading3Style } from \"./design-system/atoms/heading3\";\nimport { heading4Style } from \"./design-system/atoms/heading4\";\nimport { standardLinkStyle } from \"./design-system/atoms/standard-link-style\";\nimport { syntax } from \"./design-system/atoms/syntax\";\n\nconst PostContentContainer = styled.div`\n  color: ${(props) => props.theme.light.primaryTextColor};\n  line-height: 1.5;\n\n  & ul li {\n    font-size: ${(props) => props.theme.fontSizes[2]};\n    line-height: ${(props) => props.theme.lineHeight};\n  }\n\n  & p {\n    font-size: ${(props) => props.theme.fontSizes[2]};\n    margin-left: 0;\n    margin-right: 0;\n    line-height: ${(props) => props.theme.lineHeight};\n  }\n\n  & figure figcaption {\n    font-size: ${(props) => props.theme.fontSizes[1]};\n    text-align: center;\n    line-height: ${(props) => props.theme.lineHeight};\n  }\n\n  & h3 {\n    ${heading3Style};\n    margin-left: 0;\n    margin-right: 0;\n    line-height: ${(props) => props.theme.lineHeight};\n  }\n\n  & h4 {\n    ${heading4Style};\n    margin-left: 0;\n    margin-right: 0;\n    line-height: ${(props) => props.theme.lineHeight};\n  }\n\n  & a {\n    ${standardLinkStyle};\n    line-height: ${(props) => props.theme.lineHeight};\n  }\n\n  & blockquote {\n    line-height: ${(props) => props.theme.lineHeight};\n    color: ${(props) => props.theme.light.secondaryTextColor};\n    border-left: 5px solid ${(props) => props.theme.light.secondaryTextColor};\n    margin-left: 0;\n    margin-right: 0;\n    padding: ${(props) => props.theme.spacing[4]}\n      ${(props) => props.theme.spacing[2]};\n  }\n\n  & blockquote p {\n    line-height: ${(props) => props.theme.lineHeight};\n    margin-bottom: 0;\n    margin-top: 0;\n  }\n\n  & hr {\n    color: ${(props) => props.theme.light.dividerColor};\n    background-color: ${(props) => props.theme.light.dividerColor};\n    width: 100%;\n    margin: ${(props) => props.theme.spacing[4]} 0;\n    border: 0;\n    border-top: 1px solid rgba(0, 0, 0, 0.1);\n  }\n\n  @media (prefers-color-scheme: dark) {\n    color: ${(props) => props.theme.dark.primaryTextColor};\n\n    & blockquote {\n      color: ${(props) => props.theme.dark.secondaryTextColor};\n      border-left: 5px solid ${(props) => props.theme.dark.secondaryTextColor};\n    }\n\n    & hr {\n      color: ${(props) => props.theme.dark.dividerColor};\n      background-color: ${(props) => props.theme.dark.dividerColor};\n    }\n  }\n\n  & .embedVideo-container {\n    position: relative;\n    padding-bottom: 56.25%;\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n    margin: ${(props) => props.theme.spacing[2]} 0;\n  }\n\n  & .embedVideo-container iframe,\n  .embedVideo-container object,\n  .embedVideo-container embed {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n\n  & .katex-display > .katex {\n    display: inline-block;\n    white-space: nowrap;\n    max-width: 100%;\n    overflow-x: scroll;\n    text-align: initial;\n    line-height: ${(props) => props.theme.lineHeight};\n  }\n\n  & .katex * {\n    font-size: ${(props) => props.theme.fontSizes[4]};\n  }\n\n  & .emoji-icon {\n    top: 4px;\n  }\n\n  ${syntax}\n`;\n\ninterface PostContentProps {\n  html: string;\n}\n\nexport const PostContent: React.FC<PostContentProps> = ({ html }) => (\n  <PostContentContainer dangerouslySetInnerHTML={{ __html: html }} />\n);\n","import React from \"react\";\nimport { graphql, PageProps } from \"gatsby\";\nimport { tracking } from \"../logic/tracking\";\nimport { PostMeta } from \"../components/design-system/molecules/post-meta\";\nimport { PostQuery } from \"../../graphql-types\";\nimport { PostAuthors } from \"../components/design-system/molecules/post-authors\";\nimport { getSrc } from \"gatsby-plugin-image\";\nimport { BlogPage } from \"../components/design-system/templates/blog-page\";\nimport { Heading2 } from \"../components/design-system/atoms/heading2\";\nimport { PostContent } from \"../components/post-content\";\nimport styled from \"styled-components\";\nimport { OgPageType } from \"../logic/seo\";\nimport { getCurrentLocationFrom } from \"../logic/current-location\";\nimport loadable from \"@loadable/component\";\n\nconst PostTitle = styled(Heading2)`\n  margin: 0;\n`;\n\nconst RecentPosts = loadable(\n  () => import(`../components/design-system/organism/recent-posts`)\n);\n\nconst PostTags = loadable(\n  () => import(`../components/design-system/molecules/post-tags`)\n);\n\nconst Comments = loadable(\n  () => import(`../components/design-system/molecules/comments`)\n);\n\nconst Post: React.FC<PageProps<PostQuery>> = ({ data, location }) => {\n  const post = data.markdownRemark!;\n  const title = post.frontmatter!.title!;\n\n  if (post.frontmatter?.math === true) {\n    require(\"katex/dist/katex.min.css\");\n  }\n\n  return (\n    <BlogPage\n      location={getCurrentLocationFrom(location)}\n      author={data.site!.siteMetadata!.author!}\n      ogPageType={OgPageType.BlogPosting}\n      ogImage={`${getSrc(\n        post.frontmatter!.image!.childImageSharp?.gatsbyImageData\n      )!}`}\n      trackingCategory={tracking.category.blog_post}\n      customTitle={title}\n      description={post.frontmatter!.description!}\n      date={post.frontmatter!.date!}\n    >\n      <div>\n        <PostTitle className=\"blog-post-title\">\n          {post.frontmatter!.title}\n        </PostTitle>\n        <PostAuthors\n          authors={post.frontmatter!.authors!}\n          trackingCategory={tracking.category.blog_post}\n          trackingLabel={tracking.label.body}\n          enableUrl={true}\n        />\n        <PostMeta\n          date={post.frontmatter!.date!}\n          readingTime={post.fields!.readingTime!.text!}\n        />\n        <PostContent html={post.html!} />\n        <PostTags\n          tags={post.frontmatter!.tags!}\n          trackingCategory={tracking.category.blog_post}\n          trackingLabel={tracking.label.body}\n        />\n      </div>\n      <RecentPosts currentSlug={location.pathname} />\n      {post.frontmatter?.comments && (\n        <Comments url={location.href} title={title} />\n      )}\n    </BlogPage>\n  );\n};\n\nexport default Post;\n\nexport const query = graphql`\n  query Post($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        comments\n        authors\n        tags\n        date(formatString: \"DD MMM YYYY\")\n        description\n        math\n        image {\n          childImageSharp {\n            gatsbyImageData(layout: FULL_WIDTH)\n          }\n        }\n      }\n      fields {\n        slug\n        readingTime {\n          text\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}
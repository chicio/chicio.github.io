{"version":3,"file":"components-design-system-organism-read-next-fe78891cf53bc2822f2f.js","mappings":"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","sources":["webpack://fabrizioduroni.it/./src/components/design-system/atoms/heading5.tsx","webpack://fabrizioduroni.it/./src/components/design-system/molecules/post-card.tsx","webpack://fabrizioduroni.it/./src/components/design-system/molecules/post-tags.tsx","webpack://fabrizioduroni.it/./src/components/design-system/molecules/posts-row.tsx","webpack://fabrizioduroni.it/./src/components/design-system/molecules/tag.tsx","webpack://fabrizioduroni.it/./src/components/design-system/organism/read-next.tsx","webpack://fabrizioduroni.it/./src/components/design-system/hooks/use-shuffle-array.ts","webpack://fabrizioduroni.it/./src/components/design-system/atoms/standard-internal-link.tsx","webpack://fabrizioduroni.it/./src/components/standard-internal-link-with-tracking.tsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { headingStyle } from \"./heading-style\";\n\nexport const Heading5 = styled.h5`\n  font-size: ${(props) => props.theme.fontSizes[7]};\n  ${headingStyle}\n`;\n","import styled, { css } from \"styled-components\";\nimport { Paragraph } from \"../atoms/paragraph\";\nimport { tracking } from \"../../../logic/tracking\";\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\";\nimport { PostAuthors } from \"./post-authors\";\nimport { PostMeta } from \"./post-meta\";\nimport * as React from \"react\";\nimport { Heading5 } from \"../atoms/heading5\";\nimport { StandardInternalLinkWithTracking } from \"../../standard-internal-link-with-tracking\";\nimport { mediaQuery } from \"../utils-css/media-query\";\nimport PostTags from \"./post-tags\";\nimport { gatsbyImagePlaceholderSelector } from \"../utils-css/gatsby-image-selector\";\n\ninterface BigCardProps {\n  big: boolean;\n}\n\nconst PostDescription = styled(Paragraph)`\n  margin-right: 0;\n  margin-left: 0;\n`;\n\nconst PostCardContainer = styled.div<BigCardProps>`\n  border-radius: 4px;\n  margin-top: ${(props) => props.theme.spacing[4]};\n  background-color: ${(props) => props.theme.light.generalBackgroundLight};\n  box-shadow: 0 3px 10px 0 ${(props) => props.theme.light.boxShadowLight};\n\n  ${mediaQuery.minWidth.md} {\n    ${mediaQuery.inputDevice.mouse} {\n      transition: transform 0.2s;\n\n      &:hover {\n        transform: scale(1.025);\n      }\n    }\n\n    ${(props) =>\n      !props.big &&\n      css`\n        width: 48%;\n      `}\n  }\n\n  ${mediaQuery.dark} {\n    background-color: ${(props) => props.theme.dark.generalBackgroundLight};\n    box-shadow: 0 3px 10px 0 ${(props) => props.theme.dark.boxShadowLight};\n  }\n`;\n\nconst PostCardImageContainer = styled(GatsbyImage)`\n  width: 100%;\n  object-fit: cover;\n  height: 200px;\n\n  ${mediaQuery.minWidth.sm} {\n    height: 250px;\n  }\n\n  ${gatsbyImagePlaceholderSelector} {\n    border-radius: 4px 4px 0 0;\n  }\n`;\n\nconst A = styled.div`\n  border-radius: 20px;\n`;\n\nconst PostCardLink = styled(StandardInternalLinkWithTracking)`\n  text-decoration: none;\n\n  &:hover {\n    text-decoration: none;\n  }\n`;\n\nconst PostCardTitle = styled(Heading5)`\n  margin: 0 0 ${(props) => props.theme.spacing[2]};\n  word-wrap: break-word;\n`;\n\nconst PostCardMetaContainer = styled.div`\n  padding: ${(props) => props.theme.spacing[4]};\n`;\n\nexport type PostCardProps = BigCardProps & {\n  slug: string;\n  title: string;\n  image: IGatsbyImageData;\n  authors: (string | null | undefined)[];\n  tags: (string | null | undefined)[] | null | undefined;\n  date: string;\n  readingTime: string;\n  description: string;\n  trackingCategory: string;\n};\n\nexport const PostCard: React.FC<PostCardProps> = ({\n  big,\n  slug,\n  title,\n  image,\n  authors,\n  tags,\n  date,\n  readingTime,\n  description,\n  trackingCategory,\n}) => (\n  <PostCardContainer big={big} key={slug}>\n    <A>\n      <PostCardLink\n        to={slug}\n        trackingData={{\n          action: tracking.action.open_blog_post,\n          category: trackingCategory,\n          label: tracking.label.body,\n        }}\n      >\n        <PostCardImageContainer\n          alt={title}\n          image={image}\n          imgStyle={{\n            borderRadius: \"4px 4px 0 0\",\n          }}\n        />\n      </PostCardLink>\n      <PostCardMetaContainer>\n        <PostCardLink\n          to={slug}\n          trackingData={{\n            action: tracking.action.open_blog_post,\n            category: trackingCategory,\n            label: tracking.label.body,\n          }}\n        >\n          <PostCardTitle>{title}</PostCardTitle>\n          <PostAuthors\n            authors={authors}\n            trackingCategory={trackingCategory}\n            trackingLabel={tracking.label.body}\n            enableUrl={false}\n          />\n          <PostMeta date={date} readingTime={readingTime} />\n          <PostDescription>{`${description} [...]`}</PostDescription>\n        </PostCardLink>\n        {tags && (\n          <PostTags\n            tags={tags}\n            trackingCategory={tracking.category.blog_home}\n            trackingLabel={tracking.label.body}\n          />\n        )}\n      </PostCardMetaContainer>\n    </A>\n  </PostCardContainer>\n);\n","import { Tag } from \"./tag\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { generateTagSlug } from \"../../../logic/slug\";\n\nexport interface PostTagsProps {\n  tags: Array<string | null | undefined>;\n  trackingCategory: string;\n  trackingLabel: string;\n}\n\nconst PostTagsContainer = styled.div`\n  margin: ${(props) => props.theme.spacing[2]} 0;\n`;\n\nexport const PostTags: React.FC<PostTagsProps> = ({\n  tags,\n  trackingCategory,\n  trackingLabel,\n}) => (\n  <PostTagsContainer>\n    {tags!.map((tag) => (\n      <Tag\n        tag={tag!}\n        link={generateTagSlug(tag!)}\n        big={false}\n        key={tag}\n        trackingCategory={trackingCategory}\n        trackingLabel={trackingLabel}\n      />\n    ))}\n  </PostTagsContainer>\n);\n\nexport default PostTags;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { mediaQuery } from \"../utils-css/media-query\";\nimport { PostCard } from \"./post-card\";\nimport { tracking } from \"../../../logic/tracking\";\n\nconst PostsRowContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  ${mediaQuery.minWidth.md} {\n    flex-direction: row;\n    justify-content: space-between;\n  }\n`;\n\ninterface PostsRowProps {\n  postsGroup: {\n    node: {\n      fields?:\n        | {\n            slug?: string | null | undefined;\n            readingTime?:\n              | { text?: string | null | undefined }\n              | null\n              | undefined;\n          }\n        | null\n        | undefined;\n      frontmatter?:\n        | {\n            title?: string | null | undefined;\n            description?: string | null | undefined;\n            authors?: Array<string | null | undefined> | null | undefined;\n            tags?: Array<string | null | undefined> | null | undefined;\n            date?: any;\n            image?:\n              | {\n                  childImageSharp?: { gatsbyImageData: any } | null | undefined;\n                }\n              | null\n              | undefined;\n          }\n        | null\n        | undefined;\n    };\n  }[];\n}\n\nexport const PostsRow: React.FC<PostsRowProps> = ({ postsGroup }) => (\n  <PostsRowContainer>\n    <PostCard\n      big={false}\n      key={postsGroup[0].node.fields!.slug!}\n      slug={postsGroup[0].node.fields!.slug!}\n      title={postsGroup[0].node.frontmatter!.title!}\n      image={\n        postsGroup[0].node.frontmatter!.image!.childImageSharp!.gatsbyImageData\n      }\n      authors={postsGroup[0].node.frontmatter!.authors!}\n      date={postsGroup[0].node.frontmatter!.date!}\n      readingTime={postsGroup[0].node.fields!.readingTime!.text!}\n      description={postsGroup[0].node.frontmatter!.description!}\n      trackingCategory={tracking.category.blog_home}\n      tags={postsGroup[0].node.frontmatter!.tags}\n    />\n    {postsGroup[1] && (\n      <PostCard\n        big={false}\n        key={postsGroup[1].node.fields!.slug!}\n        slug={postsGroup[1].node.fields!.slug!}\n        title={postsGroup[1].node.frontmatter!.title!}\n        image={\n          postsGroup[1].node.frontmatter!.image!.childImageSharp!\n            .gatsbyImageData\n        }\n        authors={postsGroup[1].node.frontmatter!.authors!}\n        date={postsGroup[1].node.frontmatter!.date!}\n        readingTime={postsGroup[1].node.fields!.readingTime!.text!}\n        description={postsGroup[1].node.frontmatter!.description!}\n        trackingCategory={tracking.category.blog_home}\n        tags={postsGroup[1].node.frontmatter!.tags}\n      />\n    )}\n  </PostsRowContainer>\n);\n","import styled, { css } from \"styled-components\";\nimport React from \"react\";\nimport { StandardInternalLinkWithTracking } from \"../../standard-internal-link-with-tracking\";\nimport { tracking } from \"../../../logic/tracking\";\nimport { mediaQuery } from \"../utils-css/media-query\";\n\ninterface TagContentProps {\n  big: boolean;\n}\n\nconst TagLink = styled(StandardInternalLinkWithTracking)<TagContentProps>`\n  display: inline-block;\n  text-decoration: none;\n\n  &:hover {\n    text-decoration: none;\n  }\n\n  ${(props) =>\n    props.big === true &&\n    css`\n      margin-bottom: ${(props) => props.theme.spacing[4]};\n    `}\n`;\n\nconst TagText = styled.span<TagContentProps>`\n  background-color: ${(props) => props.theme.light.primaryColor};\n  color: ${(props) => props.theme.light.textAbovePrimaryColor};\n  margin-right: ${(props) => props.theme.spacing[0]};\n  margin-bottom: ${(props) => props.theme.spacing[0]};\n  border-radius: 3px;\n  font-size: ${(props) =>\n    props.big ? props.theme.fontSizes[5] : props.theme.fontSizes[1]};\n  padding: 0.5px 5px;\n\n  ${(props) =>\n    props.big &&\n    css`\n      display: block;\n      margin-right: ${(props) => props.theme.spacing[4]};\n      margin-bottom: ${(props) => props.theme.spacing[4]};\n    `};\n\n  ${mediaQuery.dark} {\n    background-color: ${(props) => props.theme.dark.primaryColor};\n    color: ${(props) => props.theme.dark.textAbovePrimaryColor};\n  }\n`;\n\nexport type TagProps = TagContentProps & {\n  link: string;\n  tag: string;\n  trackingCategory: string;\n  trackingLabel: string;\n};\n\nexport const Tag: React.FC<TagProps> = ({\n  tag,\n  link,\n  big,\n  trackingCategory,\n  trackingLabel,\n}) => (\n  <TagLink\n    trackingData={{\n      action: tracking.action.open_blog_tag,\n      category: trackingCategory,\n      label: trackingLabel,\n    }}\n    to={link}\n    big={big}\n  >\n    <TagText big={big}>{tag}</TagText>\n  </TagLink>\n);\n","import React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { RecentPostsQuery } from \"../../../../graphql-types\";\nimport { Heading4 } from \"../atoms/heading4\";\nimport styled from \"styled-components\";\nimport { mediaQuery } from \"../utils-css/media-query\";\nimport { useShuffleArray } from \"../hooks/use-shuffle-array\";\nimport { PostsRow } from \"../molecules/posts-row\";\n\nconst ReadNextTitle = styled(Heading4)`\n  margin: ${(props) => props.theme.spacing[2]} 0;\n`;\n\nconst CardsContainer = styled.div`\n  display: block;\n  width: 100%;\n\n  ${mediaQuery.minWidth.md} {\n    display: flex;\n    flex-direction: row;\n  }\n`;\n\nconst ReadNextContainer = styled.div`\n  margin: ${(props) => props.theme.spacing[4]} 0;\n`;\n\nexport interface RecentPostsProps {\n  currentSlug: string;\n}\n\nexport const RecentPosts: React.FC<RecentPostsProps> = ({ currentSlug }) => {\n  const data = useStaticQuery<RecentPostsQuery>(\n    graphql`\n      query RecentPosts {\n        allMarkdownRemark(\n          limit: 15\n          sort: { fields: frontmatter___date, order: DESC }\n        ) {\n          edges {\n            node {\n              fields {\n                slug\n                readingTime {\n                  text\n                }\n              }\n              frontmatter {\n                title\n                description\n                authors\n                tags\n                date(formatString: \"DD MMM YYYY\")\n                image {\n                  childImageSharp {\n                    gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED)\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    `\n  );\n\n  const readNextPosts = useShuffleArray(\n    data.allMarkdownRemark.edges.filter(\n      (post) => post.node!.fields!.slug !== currentSlug\n    )\n  ).slice(0, 2);\n\n  return (\n    <ReadNextContainer>\n      <ReadNextTitle>Read next</ReadNextTitle>\n      <CardsContainer>\n        <PostsRow postsGroup={readNextPosts} />\n      </CardsContainer>\n    </ReadNextContainer>\n  );\n};\n\nexport default RecentPosts;\n","export const useShuffleArray = <T>(array?: T[]): T[] => {\n  if (!array) {\n    return Array<T>(0);\n  }\n\n  let currentIndex = array.length;\n  let randomIndex;\n  const newArray = Array<T>(...array);\n\n  while (currentIndex !== 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n    const elementAtRandomIndex = array[randomIndex];\n    const elementAtCurrentIndex = newArray[currentIndex];\n\n    newArray[currentIndex] = elementAtRandomIndex;\n    newArray[randomIndex] = elementAtCurrentIndex;\n  }\n\n  return newArray;\n};\n","import styled from \"styled-components\";\nimport { standardLinkStyle } from \"./standard-link-style\";\nimport { Link } from \"gatsby\";\n\nexport const StandardInternalLink = styled(Link)`\n  ${standardLinkStyle}\n`;\n","import React from \"react\";\nimport { TrackingElementProps, trackWith } from \"../logic/tracking\";\nimport { StandardInternalLink } from \"./design-system/atoms/standard-internal-link\";\n\ntype StandardInternalLinkWithTrackingProps = TrackingElementProps & {\n  to: string;\n  className?: string;\n};\n\nexport const StandardInternalLinkWithTracking: React.FC<StandardInternalLinkWithTrackingProps> = ({\n  children,\n  className,\n  to,\n  trackingData,\n}) => (\n  <StandardInternalLink\n    className={className}\n    to={to}\n    onClick={() => {\n      trackWith(trackingData);\n    }}\n  >\n    {children}\n  </StandardInternalLink>\n);\n"],"names":["Heading5","styled","props","theme","fontSizes","headingStyle","PostDescription","Paragraph","withConfig","PostCardContainer","spacing","light","generalBackgroundLight","boxShadowLight","mediaQuery","big","css","dark","PostCardImageContainer","GatsbyImage","gatsbyImagePlaceholderSelector","A","PostCardLink","StandardInternalLinkWithTracking","PostCardTitle","PostCardMetaContainer","PostCard","slug","title","image","authors","tags","date","readingTime","description","trackingCategory","React","key","to","trackingData","action","tracking","category","label","alt","imgStyle","borderRadius","PostAuthors","trackingLabel","enableUrl","PostMeta","PostTags","PostTagsContainer","map","tag","Tag","link","generateTagSlug","PostsRowContainer","PostsRow","postsGroup","node","fields","frontmatter","childImageSharp","gatsbyImageData","text","TagLink","TagText","primaryColor","textAbovePrimaryColor","ReadNextTitle","Heading4","CardsContainer","ReadNextContainer","RecentPosts","currentSlug","readNextPosts","array","Array","randomIndex","currentIndex","length","newArray","Math","floor","random","elementAtRandomIndex","elementAtCurrentIndex","useShuffleArray","useStaticQuery","allMarkdownRemark","edges","filter","post","slice","StandardInternalLink","Link","standardLinkStyle","children","className","onClick","trackWith"],"sourceRoot":""}
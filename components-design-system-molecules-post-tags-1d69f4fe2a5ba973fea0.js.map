{"version":3,"file":"components-design-system-molecules-post-tags-1d69f4fe2a5ba973fea0.js","mappings":"8MAWMA,EAAoBC,EAAAA,QAAAA,IAAAA,WAAH,wEAAGA,CAAH,mBACX,SAACC,GAAD,OAAWA,EAAMC,MAAMC,QAAQ,MAG9BC,EAAoC,SAAC,GAAD,IAC/CC,EAD+C,EAC/CA,KACAC,EAF+C,EAE/CA,iBACAC,EAH+C,EAG/CA,cAH+C,OAK/C,gBAACR,EAAD,KACGM,EAAMG,KAAI,SAACC,GAAD,OACT,gBAAC,IAAD,CACEA,IAAKA,EACLC,MAAMC,EAAAA,EAAAA,IAAgBF,GACtBG,KAAK,EACLC,IAAKJ,EACLH,iBAAkBA,EAClBC,cAAeA,SAMvB,a,2GCxBMO,GAAUd,EAAAA,EAAAA,SAAOe,EAAAA,GAAV,kEAAGf,CAAH,iFAQT,SAACC,GAAD,OACc,IAAdA,EAAMW,MACNI,EAAAA,EAAAA,KADA,wBAEmB,SAACf,GAAD,OAAWA,EAAMC,MAAMC,QAAQ,SAIhDc,EAAUjB,EAAAA,QAAAA,KAAAA,WAAH,uDAAGA,CAAH,kKACS,SAACC,GAAD,OAAWA,EAAMC,MAAMgB,MAAMC,gBACxC,SAAClB,GAAD,OAAWA,EAAMC,MAAMgB,MAAME,yBACtB,SAACnB,GAAD,OAAWA,EAAMC,MAAMC,QAAQ,MAC9B,SAACF,GAAD,OAAWA,EAAMC,MAAMC,QAAQ,MAEnC,SAACF,GAAD,OACXA,EAAMW,IAAMX,EAAMC,MAAMmB,UAAU,GAAKpB,EAAMC,MAAMmB,UAAU,MAG7D,SAACpB,GAAD,OACAA,EAAMW,MACNI,EAAAA,EAAAA,KADA,uDAGkB,SAACf,GAAD,OAAWA,EAAMC,MAAMC,QAAQ,MAC9B,SAACF,GAAD,OAAWA,EAAMC,MAAMC,QAAQ,QAGlDmB,EAAAA,EAAAA,MACoB,SAACrB,GAAD,OAAWA,EAAMC,MAAMqB,KAAKJ,gBACvC,SAAClB,GAAD,OAAWA,EAAMC,MAAMqB,KAAKH,yBAW5BI,EAA0B,SAAC,GAAD,IACrCf,EADqC,EACrCA,IACAC,EAFqC,EAErCA,KACAE,EAHqC,EAGrCA,IACAN,EAJqC,EAIrCA,iBACAC,EALqC,EAKrCA,cALqC,OAOrC,gBAACO,EAAD,CACEW,aAAc,CACZC,OAAQC,EAAAA,EAAAA,OAAAA,cACRC,SAAUtB,EACVuB,MAAOtB,GAETuB,GAAIpB,EACJE,IAAKA,GAEL,gBAACK,EAAD,CAASL,IAAKA,GAAMH,M,2GCpEXsB,GAAuB/B,EAAAA,EAAAA,SAAOgC,EAAAA,MAAV,iGAAGhC,CAAH,QAC7BiC,EAAAA,GCISlB,EAAoF,SAAC,GAAD,IAC/FmB,EAD+F,EAC/FA,SACAC,EAF+F,EAE/FA,UACAL,EAH+F,EAG/FA,GACAL,EAJ+F,EAI/FA,aAJ+F,OAM/F,gBAACM,EAAD,CACEI,UAAWA,EACXL,GAAIA,EACJM,QAAS,YACPC,EAAAA,EAAAA,GAAUZ,KAGXS","sources":["webpack://fabrizioduroni.it/./src/components/design-system/molecules/post-tags.tsx","webpack://fabrizioduroni.it/./src/components/design-system/molecules/tag.tsx","webpack://fabrizioduroni.it/./src/components/design-system/atoms/standard-internal-link.tsx","webpack://fabrizioduroni.it/./src/components/standard-internal-link-with-tracking.tsx"],"sourcesContent":["import { Tag } from \"./tag\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { generateTagSlug } from \"../../../logic/slug\";\n\nexport interface PostTagsProps {\n  tags: Array<string | null | undefined>;\n  trackingCategory: string;\n  trackingLabel: string;\n}\n\nconst PostTagsContainer = styled.div`\n  margin: ${(props) => props.theme.spacing[2]} 0;\n`;\n\nexport const PostTags: React.FC<PostTagsProps> = ({\n  tags,\n  trackingCategory,\n  trackingLabel,\n}) => (\n  <PostTagsContainer>\n    {tags!.map((tag) => (\n      <Tag\n        tag={tag!}\n        link={generateTagSlug(tag!)}\n        big={false}\n        key={tag}\n        trackingCategory={trackingCategory}\n        trackingLabel={trackingLabel}\n      />\n    ))}\n  </PostTagsContainer>\n);\n\nexport default PostTags;\n","import styled, { css } from \"styled-components\";\nimport React from \"react\";\nimport { StandardInternalLinkWithTracking } from \"../../standard-internal-link-with-tracking\";\nimport { tracking } from \"../../../logic/tracking\";\nimport { mediaQuery } from \"../utils-css/media-query\";\n\ninterface TagContentProps {\n  big: boolean;\n}\n\nconst TagLink = styled(StandardInternalLinkWithTracking)<TagContentProps>`\n  display: inline-block;\n  text-decoration: none;\n\n  &:hover {\n    text-decoration: none;\n  }\n\n  ${(props) =>\n    props.big === true &&\n    css`\n      margin-bottom: ${(props) => props.theme.spacing[4]};\n    `}\n`;\n\nconst TagText = styled.span<TagContentProps>`\n  background-color: ${(props) => props.theme.light.primaryColor};\n  color: ${(props) => props.theme.light.textAbovePrimaryColor};\n  margin-right: ${(props) => props.theme.spacing[0]};\n  margin-bottom: ${(props) => props.theme.spacing[0]};\n  border-radius: 3px;\n  font-size: ${(props) =>\n    props.big ? props.theme.fontSizes[5] : props.theme.fontSizes[1]};\n  padding: 0.5px 5px;\n\n  ${(props) =>\n    props.big &&\n    css`\n      display: block;\n      margin-right: ${(props) => props.theme.spacing[4]};\n      margin-bottom: ${(props) => props.theme.spacing[4]};\n    `};\n\n  ${mediaQuery.dark} {\n    background-color: ${(props) => props.theme.dark.primaryColor};\n    color: ${(props) => props.theme.dark.textAbovePrimaryColor};\n  }\n`;\n\nexport type TagProps = TagContentProps & {\n  link: string;\n  tag: string;\n  trackingCategory: string;\n  trackingLabel: string;\n};\n\nexport const Tag: React.FC<TagProps> = ({\n  tag,\n  link,\n  big,\n  trackingCategory,\n  trackingLabel,\n}) => (\n  <TagLink\n    trackingData={{\n      action: tracking.action.open_blog_tag,\n      category: trackingCategory,\n      label: trackingLabel,\n    }}\n    to={link}\n    big={big}\n  >\n    <TagText big={big}>{tag}</TagText>\n  </TagLink>\n);\n","import styled from \"styled-components\";\nimport { standardLinkStyle } from \"./standard-link-style\";\nimport { Link } from \"gatsby\";\n\nexport const StandardInternalLink = styled(Link)`\n  ${standardLinkStyle}\n`;\n","import React from \"react\";\nimport { TrackingElementProps, trackWith } from \"../logic/tracking\";\nimport { StandardInternalLink } from \"./design-system/atoms/standard-internal-link\";\n\ntype StandardInternalLinkWithTrackingProps = TrackingElementProps & {\n  to: string;\n  className?: string;\n};\n\nexport const StandardInternalLinkWithTracking: React.FC<StandardInternalLinkWithTrackingProps> = ({\n  children,\n  className,\n  to,\n  trackingData,\n}) => (\n  <StandardInternalLink\n    className={className}\n    to={to}\n    onClick={() => {\n      trackWith(trackingData);\n    }}\n  >\n    {children}\n  </StandardInternalLink>\n);\n"],"names":["PostTagsContainer","styled","props","theme","spacing","PostTags","tags","trackingCategory","trackingLabel","map","tag","link","generateTagSlug","big","key","TagLink","StandardInternalLinkWithTracking","css","TagText","light","primaryColor","textAbovePrimaryColor","fontSizes","mediaQuery","dark","Tag","trackingData","action","tracking","category","label","to","StandardInternalLink","Link","standardLinkStyle","children","className","onClick","trackWith"],"sourceRoot":""}
{"version":3,"file":"component---src-pages-blog-archive-tsx-cdc52419a9bd6c576e0d.js","mappings":"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","sources":["webpack://fabrizioduroni.it/./src/components/design-system/atoms/heading1.tsx","webpack://fabrizioduroni.it/./src/components/design-system/atoms/time.tsx","webpack://fabrizioduroni.it/./src/components/design-system/molecules/page-title.tsx","webpack://fabrizioduroni.it/./src/components/design-system/templates/blog-generic-post-list-page-template.tsx","webpack://fabrizioduroni.it/./src/components/design-system/atoms/standard-internal-link.tsx","webpack://fabrizioduroni.it/./src/components/standard-internal-link-with-tracking.tsx","webpack://fabrizioduroni.it/./src/pages/blog/archive.tsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { headingStyle } from \"./heading-style\";\n\nexport const Heading1 = styled.h1`\n  font-size: ${(props) => props.theme.fontSizes[12]};\n  ${headingStyle}\n`;\n","import styled from \"styled-components\";\nimport { mediaQuery } from \"../utils-css/media-query\";\n\nexport const Time = styled.time`\n  color: ${(props) => props.theme.light.secondaryTextColor};\n\n  ${mediaQuery.dark} {\n    color: ${(props) => props.theme.dark.secondaryTextColor};\n  }\n`;\n","import styled from \"styled-components\";\nimport { Heading1 } from \"../atoms/heading1\";\n\nexport const PageTitle = styled(Heading1)`\n  margin-left: 0;\n  margin-right: 0;\n  margin-bottom: ${(props) => props.theme.spacing[4]};\n`;\n","import styled from \"styled-components\";\nimport { ContainerFluid } from \"../atoms/container-fluid\";\nimport { Time } from \"../atoms/time\";\nimport { FC } from \"react\";\nimport { BlogPageTemplate } from \"./blog-page-template\";\nimport { tracking } from \"../../../logic/tracking\";\nimport { PageTitle } from \"../molecules/page-title\";\nimport { OgPageType } from \"../../../logic/seo\";\nimport { CurrentLocation } from \"../../../logic/current-location\";\nimport { StandardInternalLinkWithTracking } from \"../../standard-internal-link-with-tracking\";\nimport { mediaQuery } from \"../utils-css/media-query\";\n\nconst PostContainer = styled(ContainerFluid)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-bottom: ${(props) => props.theme.spacing[3]};\n  padding-left: 0;\n  padding-right: 0;\n\n  ${mediaQuery.minWidth.md} {\n    flex-direction: row;\n    align-items: center;\n  }\n`;\n\ninterface ColumnProps {\n  size: string;\n}\n\nconst Column = styled.div<ColumnProps>`\n  ${mediaQuery.minWidth.md} {\n    flex: ${(props) => props.size};\n  }\n`;\n\nconst PostTime = styled(Time)`\n  font-size: ${(props) => props.theme.fontSizes[4]};\n`;\n\nconst PostLink = styled(StandardInternalLinkWithTracking)`\n  font-size: ${(props) => props.theme.fontSizes[4]};\n`;\n\nexport interface BlogGenericPostListPageProps {\n  title: string;\n  posts: ReadonlyArray<{\n    readonly node: {\n      readonly fields: { readonly slug: string | null } | null;\n      readonly frontmatter: {\n        readonly title: string | null;\n        readonly date: string | null;\n      } | null;\n    };\n  }>;\n  author: string;\n  location: CurrentLocation;\n  ogPageType: OgPageType;\n  ogImage: string;\n  trackingCategory: string;\n}\n\nexport const BlogGenericPostListPageTemplate: FC<BlogGenericPostListPageProps> =\n  ({\n    title,\n    posts,\n    author,\n    location,\n    ogPageType,\n    ogImage,\n    trackingCategory,\n  }) => (\n    <BlogPageTemplate\n      location={location}\n      author={author}\n      ogPageType={ogPageType}\n      ogImage={ogImage}\n      trackingCategory={trackingCategory}\n    >\n      <PageTitle>{title}</PageTitle>\n      {posts.map((post) => (\n        <PostContainer key={post.node.fields!.slug!}>\n          <Column size={\"15%\"}>\n            <PostTime>{post.node.frontmatter?.date}</PostTime>\n          </Column>\n          <Column size={\"85%\"}>\n            <PostLink\n              to={post.node.fields!.slug!}\n              trackingData={{\n                action: tracking.action.open_blog_post,\n                category: trackingCategory,\n                label: tracking.label.body,\n              }}\n            >\n              {post.node.frontmatter?.title}\n            </PostLink>\n          </Column>\n        </PostContainer>\n      ))}\n    </BlogPageTemplate>\n  );\n","import styled from \"styled-components\";\nimport { standardLinkStyle } from \"./standard-link-style\";\nimport { Link } from \"gatsby\";\n\nexport const StandardInternalLink = styled(Link)`\n  ${standardLinkStyle}\n`;\n","import { FC, ReactNode } from \"react\";\nimport { TrackingElementProps, trackWith } from \"../logic/tracking\";\nimport { StandardInternalLink } from \"./design-system/atoms/standard-internal-link\";\n\ntype StandardInternalLinkWithTrackingProps = TrackingElementProps & {\n  to: string;\n  className?: string;\n  children?: ReactNode;\n};\n\nexport const StandardInternalLinkWithTracking: FC<StandardInternalLinkWithTrackingProps> =\n  ({ children, className, to, trackingData }) => (\n    <StandardInternalLink\n      className={className}\n      to={to}\n      onClick={() => {\n        trackWith(trackingData);\n      }}\n    >\n      {children}\n    </StandardInternalLink>\n  );\n","import { FC } from \"react\";\nimport { graphql, PageProps } from \"gatsby\";\nimport { tracking } from \"../../logic/tracking\";\nimport { BlogGenericPostListPageTemplate } from \"../../components/design-system/templates/blog-generic-post-list-page-template\";\nimport { OgPageType } from \"../../logic/seo\";\nimport { getCurrentLocationFrom } from \"../../logic/current-location\";\n\nconst Archive: FC<PageProps<Queries.ArchiveQuery>> = ({ data, location }) => {\n  const siteMetadata = data.site!.siteMetadata!;\n  const author = siteMetadata.author!;\n  const featuredImage = siteMetadata.featuredImage!;\n\n  return (\n    <BlogGenericPostListPageTemplate\n      title={\"Archive\"}\n      posts={data.allMarkdownRemark.edges}\n      author={author}\n      location={getCurrentLocationFrom(location)}\n      ogPageType={OgPageType.WebSite}\n      ogImage={featuredImage}\n      trackingCategory={tracking.category.blog_archive}\n    />\n  );\n};\n\nexport default Archive;\n\nexport const pageQuery = graphql`\n  query Archive {\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMM YYYY\")\n            title\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        author\n        featuredImage\n      }\n    }\n  }\n`;\n"],"names":["Heading1","styled","h1","withConfig","displayName","componentId","props","theme","fontSizes","headingStyle","Time","time","light","secondaryTextColor","mediaQuery","dark","PageTitle","spacing","PostContainer","ContainerFluid","minWidth","md","Column","div","size","PostTime","PostLink","StandardInternalLinkWithTracking","BlogGenericPostListPageTemplate","_ref","title","posts","author","location","ogPageType","ogImage","trackingCategory","_jsxs","BlogPageTemplate","children","_jsx","map","post","_post$node$frontmatte","_post$node$frontmatte2","node","frontmatter","date","to","fields","slug","trackingData","action","tracking","open_blog_post","category","label","body","StandardInternalLink","Link","standardLinkStyle","className","onClick","trackWith","data","siteMetadata","site","featuredImage","allMarkdownRemark","edges","getCurrentLocationFrom","OgPageType","WebSite","blog_archive"],"sourceRoot":""}
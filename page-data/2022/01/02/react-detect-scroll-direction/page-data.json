{"componentChunkName":"component---src-templates-post-tsx","path":"/2022/01/02/react-detect-scroll-direction/","result":{"data":{"markdownRemark":{"html":"<p><em>How do you detect scroll direction using React hooks? Let’s find out in this new post.</em></p>\n<hr>\n<p>In the last year I migrated this blog on <a href=\"https://www.gatsbyjs.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GatsbyJS</a>. This basically means that now this blog is powered by <a href=\"https://www.fabrizioduroni.it/2018/07/04/react-native-typescript-existing-app/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">React, a framework I love</a>. In particular, I used only <a href=\"https://reactjs.org/docs/hooks-intro.html\" title=\"react hooks\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">hooks</a> and functional components. One of the thing I had to do was to detect the scroll direction in order to implement the sticky header with hide on scroll feature that you can find at the top of this page (and everywhere on this website). How can we do this? Searching on the web I found this <a href=\"https://stackoverflow.com/questions/62497110/detect-scroll-direction-in-react-js\" title=\"react scroll detection\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">well written post on stackoverflow</a> that contains a raw implementation of what I needed. In this blog post I will show you how I evolved that react hook into into a production ready one that you can use to detect the scroll direction in a page.</p>\n<h4>Implementation</h4>\n<p>Let’s start from defining an enum that will represent the scroll direction. Let’s define it as string, because you know that <a href=\"https://www.aaron-powell.com/posts/2020-05-27-the-dangers-of-typescript-enums/\" title=\"enum typescript danger\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">enums in typescript are dangerous if you don’t define explicit values</a> <img class=\"emoji-icon\" alt=\"emoji-bomb\" data-icon=\"emoji-bomb\" style=\"display: inline; margin: 0; position: relative; width: 20px\" src=\"data:image/png;base64, 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\" title=\"emoji-bomb\">.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">enum</span> ScrollDirection <span class=\"token punctuation\">{</span>\n  up <span class=\"token operator\">=</span> “up”<span class=\"token punctuation\">,</span>\n  down <span class=\"token operator\">=</span> “down”<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now we can start to create our hook. We will define it as <code class=\"language-text\">useScrollDirection</code>  function and we will define two thing:</p>\n<ul>\n<li>a <code class=\"language-text\">threshold</code> variable that will be use as threshold: we will detect change in the scroll direction if the user scrolls for at least <code class=\"language-text\">100</code>  pixels up or down</li>\n<li>a <code class=\"language-text\">scrollDir</code> react state defined with the <code class=\"language-text\">useState</code>  hook that will store the current scroll direction. This is what we will return as result from our hook.</li>\n</ul>\n<p>After this we will use the <code class=\"language-text\">useEffect</code> hooks, an hook used to <a href=\"https://reactjs.org/docs/hooks-effect.html\" title=\"react hook effect\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">perform side effects in functional components</a>. Inside it we will define all the scroll detection logic. The <code class=\"language-text\">useEffect</code> hook is invoked without dependencies (the empty array <code class=\"language-text\">[]</code> passed as second parameter). As you may already know this basically means that its behavior will be equivalent to the <code class=\"language-text\">componentDidMount</code>  react class component lifecycle method. This is what we came up so far.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useEffect<span class=\"token punctuation\">,</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">enum</span> ScrollDirection <span class=\"token punctuation\">{</span>\n  up <span class=\"token operator\">=</span> “up”<span class=\"token punctuation\">,</span>\n  down <span class=\"token operator\">=</span> “down”<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">useScrollDirection</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> threshold <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>scrollDir<span class=\"token punctuation\">,</span> setScrollDir<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>ScrollDirection<span class=\"token punctuation\">.</span>up<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// …scroll detection logic</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> scrollDir<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Now we are ready to write our scroll detection logic. The first thing to do is to save the initial Y scroll position of the window when we execute the hook. We will store in the <code class=\"language-text\">previousScrollYPosition</code> variable. Then we will write some functions:</p>\n<ul>\n<li><code class=\"language-text\">scrolledMoreThanThreshold</code> is a function that will detect is the user scroll more pixel than the ones defined in the <code class=\"language-text\">threshold</code> variable we defined before. To do this it will basically check that the absolute difference (no sign) between the  <code class=\"language-text\">previousScrollYPosition</code> and the current scroll position received as parameter is greater than <code class=\"language-text\">threshold</code></li>\n<li><code class=\"language-text\">isScrollingUp</code> is one of the two core function needed in order to detect the scroll direction. It basically check if the current scroll position is greater that the previous scroll position. We need also to define some <strong>additional checks</strong> needed in order to <strong>to avoid to receive false positive scroll direction</strong> (they will basically avoid scroll direction updates if the user is at the top/bottom of the page and it continues to scroll).</li>\n<li><code class=\"language-text\">updateScrollDirection</code> is the other core function. It basically uses the previous defined functions to check if the user is scrolling more that the threshold and the scroll direction (using the <code class=\"language-text\">isScrollingUp</code>  function). It then update the <code class=\"language-text\">scrollDir</code>  state and the <code class=\"language-text\">previousScrollYPosition</code> variable if a scroll change has been detected.</li>\n<li><code class=\"language-text\">onScroll</code>  is a function that attaches the  <code class=\"language-text\">updateScrollDirection</code> function to the <code class=\"language-text\">window.requestAnimationFrame</code> function so that we can calculate our scroll direction in sync with the window refresh frame rate (so if you have a refresh of 60 fps you will receive 60 calls per seconds). In this way we will be sure that our scroll direction calculation will happen after each page render/repaint.</li>\n</ul>\n<p>Now we have all the functions we need in order to detect the scroll direction.\nThe last thing we need to do is to attach the <code class=\"language-text\">onScroll</code> function to the scroll listener with the <code class=\"language-text\">window.addEventListener(\"scroll\", onScroll);</code> instruction.\nWait…how do we clean/remove the listener? 🤔 Well, the <code class=\"language-text\">useEffect</code> hooks can return a function that will be used to cleanup every resource used in the hook when the component that launched it will be unmounted.\nSo the (real 🙇) last thing we need to do is to return the clean up function that will basically call  <code class=\"language-text\">window.removeEventListener(\"scroll\", onScroll)</code>  to remove the listener.\nThat’s it!!! 🚀🚀🚀 Below you can find the complete hook that you can copy/paste in your application. If you want you can try to go further by parametrizing some of the vaues used inside the hook (eg.: threshold)</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useEffect<span class=\"token punctuation\">,</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">enum</span> ScrollDirection <span class=\"token punctuation\">{</span>\n  up <span class=\"token operator\">=</span> “up”<span class=\"token punctuation\">,</span>\n  down <span class=\"token operator\">=</span> “down”<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">useScrollDirection</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> threshold <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>scrollDir<span class=\"token punctuation\">,</span> setScrollDir<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>ScrollDirection<span class=\"token punctuation\">.</span>up<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> previousScrollYPosition <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>scrollY<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">scrolledMoreThanThreshold</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>currentScrollYPosition<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n      Math<span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>currentScrollYPosition <span class=\"token operator\">-</span> previousScrollYPosition<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> threshold<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">isScrollingUp</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>currentScrollYPosition<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n      currentScrollYPosition <span class=\"token operator\">></span> previousScrollYPosition <span class=\"token operator\">&amp;&amp;</span>\n      <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>previousScrollYPosition <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> currentScrollYPosition <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n      <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>currentScrollYPosition <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> previousScrollYPosition <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">updateScrollDirection</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> currentScrollYPosition <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>scrollY<span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">scrolledMoreThanThreshold</span><span class=\"token punctuation\">(</span>currentScrollYPosition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> newScrollDirection <span class=\"token operator\">=</span> <span class=\"token function\">isScrollingUp</span><span class=\"token punctuation\">(</span>currentScrollYPosition<span class=\"token punctuation\">)</span>\n          <span class=\"token operator\">?</span> ScrollDirection<span class=\"token punctuation\">.</span>down\n          <span class=\"token operator\">:</span> ScrollDirection<span class=\"token punctuation\">.</span>up<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">setScrollDir</span><span class=\"token punctuation\">(</span>newScrollDirection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        previousScrollYPosition <span class=\"token operator\">=</span>\n          currentScrollYPosition <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> currentScrollYPosition <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onScroll</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> window<span class=\"token punctuation\">.</span><span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>updateScrollDirection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"scroll\"</span><span class=\"token punctuation\">,</span> onScroll<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> window<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"scroll\"</span><span class=\"token punctuation\">,</span> onScroll<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> scrollDir<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>Conclusion</h4>\n<p>Did you enjoy reading my post? If so, support my work by 💞 <a href=\"https://github.com/chicio\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">starring/funding some of my open source projects</a> 💞.</p>","frontmatter":{"title":"A simple react hook to detect scroll direction","comments":true,"authors":["fabrizio_duroni"],"tags":["react","web development"],"date":"02 Jan 2022","description":"How do you detect scroll direction using React hooks? Let’s find out in this new post.","math":false,"image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#282838","images":{"fallback":{"src":"/static/da07375c4952c28d295e43e4c8eb6b72/bae77/react-hook-scroll-direction.jpg","srcSet":"/static/da07375c4952c28d295e43e4c8eb6b72/b91c1/react-hook-scroll-direction.jpg 750w,\n/static/da07375c4952c28d295e43e4c8eb6b72/a3008/react-hook-scroll-direction.jpg 1080w,\n/static/da07375c4952c28d295e43e4c8eb6b72/d1ba1/react-hook-scroll-direction.jpg 1366w,\n/static/da07375c4952c28d295e43e4c8eb6b72/bae77/react-hook-scroll-direction.jpg 1500w","sizes":"100vw"},"sources":[{"srcSet":"/static/da07375c4952c28d295e43e4c8eb6b72/be179/react-hook-scroll-direction.webp 750w,\n/static/da07375c4952c28d295e43e4c8eb6b72/1eb10/react-hook-scroll-direction.webp 1080w,\n/static/da07375c4952c28d295e43e4c8eb6b72/e34d1/react-hook-scroll-direction.webp 1366w,\n/static/da07375c4952c28d295e43e4c8eb6b72/6b2e7/react-hook-scroll-direction.webp 1500w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.4666666666666667}}}},"fields":{"slug":"/2022/01/02/react-detect-scroll-direction/","readingTime":{"text":"5 min read"}}},"site":{"siteMetadata":{"author":"Fabrizio Duroni"}}},"pageContext":{"slug":"/2022/01/02/react-detect-scroll-direction/"}},"staticQueryHashes":["2055070849","3076394108","379746230","4028829600"],"slicesMap":{}}
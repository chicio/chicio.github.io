{"componentChunkName":"component---src-templates-blog-tsx","path":"/blog/6","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/2018/03/02/code-review-whats-it-is-and-why-it-is-important/","readingTime":{"text":"6 min read"}},"frontmatter":{"title":"Code review: what it is and why it matters","description":"In this post I will talk about code review: what it is and why it matters.","authors":["angelo_sciarra","fabrizio_duroni"],"date":"02 Mar 2018","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/eadbdea826b2e6f997f7b382cfac56e8/bd870/01-technology-version-update.jpg","srcSet":"/static/eadbdea826b2e6f997f7b382cfac56e8/10852/01-technology-version-update.jpg 750w,\n/static/eadbdea826b2e6f997f7b382cfac56e8/58f9d/01-technology-version-update.jpg 1080w,\n/static/eadbdea826b2e6f997f7b382cfac56e8/11e08/01-technology-version-update.jpg 1366w,\n/static/eadbdea826b2e6f997f7b382cfac56e8/bd870/01-technology-version-update.jpg 1500w","sizes":"100vw"},"sources":[{"srcSet":"/static/eadbdea826b2e6f997f7b382cfac56e8/6e32b/01-technology-version-update.webp 750w,\n/static/eadbdea826b2e6f997f7b382cfac56e8/d51eb/01-technology-version-update.webp 1080w,\n/static/eadbdea826b2e6f997f7b382cfac56e8/3f33a/01-technology-version-update.webp 1366w,\n/static/eadbdea826b2e6f997f7b382cfac56e8/8ae71/01-technology-version-update.webp 1500w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.6006666666666667}}}}}},{"node":{"fields":{"slug":"/2018/02/17/blender-tutorial-2-selecting-transforming-objects/","readingTime":{"text":"4 min read"}},"frontmatter":{"title":"Blender tutorial: selecting and transforming objects","description":"Second post of the Blender tutorial series. This time we will learn how to select and move objects.","authors":["fabrizio_duroni"],"date":"17 Feb 2018","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/53ecaf5d4bd48177bcdae6c5ae3c809a/5ff8e/blender-selecting-objects-2.jpg","srcSet":"/static/53ecaf5d4bd48177bcdae6c5ae3c809a/cc144/blender-selecting-objects-2.jpg 750w,\n/static/53ecaf5d4bd48177bcdae6c5ae3c809a/224fc/blender-selecting-objects-2.jpg 1080w,\n/static/53ecaf5d4bd48177bcdae6c5ae3c809a/d919b/blender-selecting-objects-2.jpg 1366w,\n/static/53ecaf5d4bd48177bcdae6c5ae3c809a/5ff8e/blender-selecting-objects-2.jpg 1500w","sizes":"100vw"},"sources":[{"srcSet":"/static/53ecaf5d4bd48177bcdae6c5ae3c809a/798a7/blender-selecting-objects-2.webp 750w,\n/static/53ecaf5d4bd48177bcdae6c5ae3c809a/b846a/blender-selecting-objects-2.webp 1080w,\n/static/53ecaf5d4bd48177bcdae6c5ae3c809a/8e480/blender-selecting-objects-2.webp 1366w,\n/static/53ecaf5d4bd48177bcdae6c5ae3c809a/a103d/blender-selecting-objects-2.webp 1500w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.6373333333333333}}}}}},{"node":{"fields":{"slug":"/2018/02/08/react-native-debug-on-device-rctbundleurlprovider/","readingTime":{"text":"6 min read"}},"frontmatter":{"title":"React Native: the power of RCTBundleURLProvider to build, run and debug on an iOS device from Xcode","description":"Do you know how to debug your react native app on a iOS device?","authors":["fabrizio_duroni","mariano_patafio"],"date":"08 Feb 2018","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#080808","images":{"fallback":{"src":"/static/997c2f20a4ea3bad3bd075b483318f69/6e588/react-native-bundle-url-provider-setup.jpg","srcSet":"/static/997c2f20a4ea3bad3bd075b483318f69/86f08/react-native-bundle-url-provider-setup.jpg 750w,\n/static/997c2f20a4ea3bad3bd075b483318f69/f8f47/react-native-bundle-url-provider-setup.jpg 1080w,\n/static/997c2f20a4ea3bad3bd075b483318f69/e1813/react-native-bundle-url-provider-setup.jpg 1366w,\n/static/997c2f20a4ea3bad3bd075b483318f69/6e588/react-native-bundle-url-provider-setup.jpg 1500w","sizes":"100vw"},"sources":[{"srcSet":"/static/997c2f20a4ea3bad3bd075b483318f69/a83d3/react-native-bundle-url-provider-setup.webp 750w,\n/static/997c2f20a4ea3bad3bd075b483318f69/d3691/react-native-bundle-url-provider-setup.webp 1080w,\n/static/997c2f20a4ea3bad3bd075b483318f69/2af58/react-native-bundle-url-provider-setup.webp 1366w,\n/static/997c2f20a4ea3bad3bd075b483318f69/3550c/react-native-bundle-url-provider-setup.webp 1500w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.594}}}}}},{"node":{"fields":{"slug":"/2018/01/31/blender-tutorial-1-user-interface/","readingTime":{"text":"5 min read"}},"frontmatter":{"title":"Blender tutorial: user interface","description":"In this new series of post I will talk about learning to use Blender, the famous 3D computer graphics software. A series of tutorial for beginners (like me).","authors":["fabrizio_duroni"],"date":"31 Jan 2018","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#383838","images":{"fallback":{"src":"/static/d777dcc1708ca04e23aefde10e5494a5/5ff8e/blender-ui-1-editors.jpg","srcSet":"/static/d777dcc1708ca04e23aefde10e5494a5/cc144/blender-ui-1-editors.jpg 750w,\n/static/d777dcc1708ca04e23aefde10e5494a5/224fc/blender-ui-1-editors.jpg 1080w,\n/static/d777dcc1708ca04e23aefde10e5494a5/d919b/blender-ui-1-editors.jpg 1366w,\n/static/d777dcc1708ca04e23aefde10e5494a5/5ff8e/blender-ui-1-editors.jpg 1500w","sizes":"100vw"},"sources":[{"srcSet":"/static/d777dcc1708ca04e23aefde10e5494a5/798a7/blender-ui-1-editors.webp 750w,\n/static/d777dcc1708ca04e23aefde10e5494a5/b846a/blender-ui-1-editors.webp 1080w,\n/static/d777dcc1708ca04e23aefde10e5494a5/8e480/blender-ui-1-editors.webp 1366w,\n/static/d777dcc1708ca04e23aefde10e5494a5/a103d/blender-ui-1-editors.webp 1500w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.6373333333333333}}}}}},{"node":{"fields":{"slug":"/2018/01/16/ide-refactoring-android-studio-xcode-appcode-webstorm-jetbrains/","readingTime":{"text":"6 min read"}},"frontmatter":{"title":"Android Studio vs Xcode vs AppCode: a brief comparison about coding speed","description":"In this post I will compare the coding speed that it is possible to achieve in some JetBrains IDEs and XCode, in terms of code creation and refactoring.","authors":["fabrizio_duroni","tommaso_resti","francesco_bonfadelli"],"date":"16 Jan 2018","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/ac675a746c2055e4b817ce1bb0363f4c/3564b/androidstudio-xcode-appcode.jpg","srcSet":"/static/ac675a746c2055e4b817ce1bb0363f4c/7284f/androidstudio-xcode-appcode.jpg 750w,\n/static/ac675a746c2055e4b817ce1bb0363f4c/29ba9/androidstudio-xcode-appcode.jpg 1080w,\n/static/ac675a746c2055e4b817ce1bb0363f4c/c8896/androidstudio-xcode-appcode.jpg 1366w,\n/static/ac675a746c2055e4b817ce1bb0363f4c/3564b/androidstudio-xcode-appcode.jpg 1500w","sizes":"100vw"},"sources":[{"srcSet":"/static/ac675a746c2055e4b817ce1bb0363f4c/57584/androidstudio-xcode-appcode.webp 750w,\n/static/ac675a746c2055e4b817ce1bb0363f4c/984df/androidstudio-xcode-appcode.webp 1080w,\n/static/ac675a746c2055e4b817ce1bb0363f4c/4a276/androidstudio-xcode-appcode.webp 1366w,\n/static/ac675a746c2055e4b817ce1bb0363f4c/2b8d7/androidstudio-xcode-appcode.webp 1500w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.6666666666666666}}}}}},{"node":{"fields":{"slug":"/2018/01/03/scene-kit-physically-based-rendering/","readingTime":{"text":"13 min read"}},"frontmatter":{"title":"SceneKit and physically based rendering","description":"Let's try to build a scene using SceneKit and its physically based rendering features.","authors":["fabrizio_duroni"],"date":"03 Jan 2018","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/12d0892d46967ae2bc6f295a37ba7f0f/f4e40/physically-based-rendering-scene-right.jpg","srcSet":"/static/12d0892d46967ae2bc6f295a37ba7f0f/2e9d5/physically-based-rendering-scene-right.jpg 750w,\n/static/12d0892d46967ae2bc6f295a37ba7f0f/37167/physically-based-rendering-scene-right.jpg 1080w,\n/static/12d0892d46967ae2bc6f295a37ba7f0f/a1598/physically-based-rendering-scene-right.jpg 1366w,\n/static/12d0892d46967ae2bc6f295a37ba7f0f/f4e40/physically-based-rendering-scene-right.jpg 1500w","sizes":"100vw"},"sources":[{"srcSet":"/static/12d0892d46967ae2bc6f295a37ba7f0f/b6c78/physically-based-rendering-scene-right.webp 750w,\n/static/12d0892d46967ae2bc6f295a37ba7f0f/a9803/physically-based-rendering-scene-right.webp 1080w,\n/static/12d0892d46967ae2bc6f295a37ba7f0f/7a617/physically-based-rendering-scene-right.webp 1366w,\n/static/12d0892d46967ae2bc6f295a37ba7f0f/9a31d/physically-based-rendering-scene-right.webp 1500w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.4546666666666667}}}}}},{"node":{"fields":{"slug":"/2017/12/08/react-native-multiple-instance-rctrootview/","readingTime":{"text":"6 min read"}},"frontmatter":{"title":"React Native: use multiple RCTRootView instances in an existing iOS app","description":"In this post I show you how it is possible to use multiple RCTRootView instances in an existing iOS app.","authors":["fabrizio_duroni"],"date":"08 Dec 2017","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/838643520701d98707718bc5a3526c4f/13d5f/react-native-crash-reload-with-debugger.jpg","srcSet":"/static/838643520701d98707718bc5a3526c4f/e50a8/react-native-crash-reload-with-debugger.jpg 750w,\n/static/838643520701d98707718bc5a3526c4f/f3163/react-native-crash-reload-with-debugger.jpg 1080w,\n/static/838643520701d98707718bc5a3526c4f/aa18a/react-native-crash-reload-with-debugger.jpg 1366w,\n/static/838643520701d98707718bc5a3526c4f/13d5f/react-native-crash-reload-with-debugger.jpg 1500w","sizes":"100vw"},"sources":[{"srcSet":"/static/838643520701d98707718bc5a3526c4f/b8ec7/react-native-crash-reload-with-debugger.webp 750w,\n/static/838643520701d98707718bc5a3526c4f/88654/react-native-crash-reload-with-debugger.webp 1080w,\n/static/838643520701d98707718bc5a3526c4f/c20a3/react-native-crash-reload-with-debugger.webp 1366w,\n/static/838643520701d98707718bc5a3526c4f/162d8/react-native-crash-reload-with-debugger.webp 1500w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.6293333333333333}}}}}},{"node":{"fields":{"slug":"/2017/12/07/physically-base-rendering-introduction/","readingTime":{"text":"8 min read"}},"frontmatter":{"title":"Physically based rendering: informal introduction","description":"In this post I will give you an informal introduction about Physically based rendering.","authors":["fabrizio_duroni"],"date":"07 Dec 2017","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#988888","images":{"fallback":{"src":"/static/a6eb67f5c0686259dfdceeca54861b6b/91bf9/pbr-introduction-examples.jpg","srcSet":"/static/a6eb67f5c0686259dfdceeca54861b6b/1e033/pbr-introduction-examples.jpg 750w,\n/static/a6eb67f5c0686259dfdceeca54861b6b/91bf9/pbr-introduction-examples.jpg 1050w","sizes":"100vw"},"sources":[{"srcSet":"/static/a6eb67f5c0686259dfdceeca54861b6b/e30f5/pbr-introduction-examples.webp 750w,\n/static/a6eb67f5c0686259dfdceeca54861b6b/bf743/pbr-introduction-examples.webp 1050w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.42857142857142855}}}}}},{"node":{"fields":{"slug":"/2017/11/14/react-native-realm-custom-manual-linking-app-custom-directories-ios/","readingTime":{"text":"6 min read"}},"frontmatter":{"title":"React Native and Realm: custom manual link for an iOS app with custom directory structure","description":"In this post I will show you how to install realm as a dependency in a React Native project with custom folders structure without using react-native link command.","authors":["fabrizio_duroni"],"date":"14 Nov 2017","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/70056b1c737d336e993d12e5e19c8a91/d7bda/react-native-realm-10-build-works.jpg","srcSet":"/static/70056b1c737d336e993d12e5e19c8a91/1ae21/react-native-realm-10-build-works.jpg 750w,\n/static/70056b1c737d336e993d12e5e19c8a91/9d572/react-native-realm-10-build-works.jpg 1080w,\n/static/70056b1c737d336e993d12e5e19c8a91/19906/react-native-realm-10-build-works.jpg 1366w,\n/static/70056b1c737d336e993d12e5e19c8a91/d7bda/react-native-realm-10-build-works.jpg 1500w","sizes":"100vw"},"sources":[{"srcSet":"/static/70056b1c737d336e993d12e5e19c8a91/1a1e4/react-native-realm-10-build-works.webp 750w,\n/static/70056b1c737d336e993d12e5e19c8a91/92625/react-native-realm-10-build-works.webp 1080w,\n/static/70056b1c737d336e993d12e5e19c8a91/9b9cc/react-native-realm-10-build-works.webp 1366w,\n/static/70056b1c737d336e993d12e5e19c8a91/fd5ea/react-native-realm-10-build-works.webp 1500w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.6093333333333333}}}}}},{"node":{"fields":{"slug":"/2017/10/27/model-view-presenter-architecture-android-java/","readingTime":{"text":"10 min read"}},"frontmatter":{"title":"Model View Presenter on Android: unit test for everything","description":"In this post I will talk about the model view presenter architectural pattern and how it can improve you unit test and your TDD workflow when developing an Android application.","authors":["fabrizio_duroni"],"date":"27 Oct 2017","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/9b4e27bc179c1090ba03ba21e1b5c3e2/f65ac/mockup-model-view-presenter.jpg","srcSet":"/static/9b4e27bc179c1090ba03ba21e1b5c3e2/7b2d3/mockup-model-view-presenter.jpg 750w,\n/static/9b4e27bc179c1090ba03ba21e1b5c3e2/fcb0b/mockup-model-view-presenter.jpg 1080w,\n/static/9b4e27bc179c1090ba03ba21e1b5c3e2/f65ac/mockup-model-view-presenter.jpg 1200w","sizes":"100vw"},"sources":[{"srcSet":"/static/9b4e27bc179c1090ba03ba21e1b5c3e2/f004d/mockup-model-view-presenter.webp 750w,\n/static/9b4e27bc179c1090ba03ba21e1b5c3e2/7efed/mockup-model-view-presenter.webp 1080w,\n/static/9b4e27bc179c1090ba03ba21e1b5c3e2/934b6/mockup-model-view-presenter.webp 1200w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1.2725000000000002}}}}}}]},"site":{"siteMetadata":{"title":"Fabrizio Duroni | Fabrizio Duroni ‘Chicio Coding’ official site with profile details. Official blog chicio coding. Main skills: mobile application development, computer graphics, web development.","author":"Fabrizio Duroni","featuredImage":"/chicio-coding-feature-graphic.jpg"}}},"pageContext":{"limit":10,"skip":50,"numberOfPages":7,"currentPage":6}},"staticQueryHashes":["3076394108","3736063423","4028829600"]}
{"version":3,"file":"components-design-system-organism-read-next-fba083dcf7f504213947.js","mappings":"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","sources":["webpack://fabrizioduroni.it/./src/components/design-system/atoms/heading5.tsx","webpack://fabrizioduroni.it/./src/components/design-system/molecules/post-card.tsx","webpack://fabrizioduroni.it/./src/components/design-system/molecules/post-tags.tsx","webpack://fabrizioduroni.it/./src/components/design-system/molecules/posts-row.tsx","webpack://fabrizioduroni.it/./src/components/design-system/molecules/tag.tsx","webpack://fabrizioduroni.it/./src/components/design-system/organism/read-next.tsx","webpack://fabrizioduroni.it/./src/components/design-system/hooks/use-shuffle-array.ts","webpack://fabrizioduroni.it/./src/components/design-system/atoms/standard-internal-link.tsx","webpack://fabrizioduroni.it/./src/components/standard-internal-link-with-tracking.tsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { headingStyle } from \"./heading-style\";\n\nexport const Heading5 = styled.h5`\n  font-size: ${(props) => props.theme.fontSizes[7]};\n  ${headingStyle}\n`;\n","import styled, { css } from \"styled-components\";\nimport { Paragraph } from \"../atoms/paragraph\";\nimport { tracking } from \"../../../logic/tracking\";\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\";\nimport { PostAuthors } from \"./post-authors\";\nimport { PostMeta } from \"./post-meta\";\nimport { Heading5 } from \"../atoms/heading5\";\nimport { StandardInternalLinkWithTracking } from \"../../standard-internal-link-with-tracking\";\nimport { mediaQuery } from \"../utils-css/media-query\";\nimport PostTags from \"./post-tags\";\nimport { gatsbyImagePlaceholderSelector } from \"../utils-css/gatsby-image-selector\";\nimport { FC } from \"react\";\n\ninterface BigCardProps {\n  big: boolean;\n}\n\nconst PostDescription = styled(Paragraph)`\n  margin-right: 0;\n  margin-left: 0;\n`;\n\nconst PostCardContainer = styled.div<BigCardProps>`\n  border-radius: 4px;\n  margin-top: ${(props) => props.theme.spacing[4]};\n  background-color: ${(props) => props.theme.light.generalBackgroundLight};\n  box-shadow: 0 3px 10px 0 ${(props) => props.theme.light.boxShadowLight};\n\n  ${mediaQuery.minWidth.md} {\n    ${mediaQuery.inputDevice.mouse} {\n      transition: transform 0.2s;\n\n      &:hover {\n        transform: scale(1.025);\n      }\n    }\n\n    ${(props) =>\n      !props.big &&\n      css`\n        width: 48%;\n      `}\n  }\n\n  ${mediaQuery.dark} {\n    background-color: ${(props) => props.theme.dark.generalBackgroundLight};\n    box-shadow: 0 3px 10px 0 ${(props) => props.theme.dark.boxShadowLight};\n  }\n`;\n\nconst PostCardImage = styled(GatsbyImage)`\n  width: 100%;\n  object-fit: cover;\n  height: 200px;\n\n  ${mediaQuery.minWidth.sm} {\n    height: 250px;\n  }\n\n  ${gatsbyImagePlaceholderSelector} {\n    border-radius: 4px 4px 0 0;\n  }\n`;\n\nconst A = styled.div`\n  border-radius: 20px;\n`;\n\nconst PostCardLink = styled(StandardInternalLinkWithTracking)`\n  text-decoration: none;\n\n  &:hover {\n    text-decoration: none;\n  }\n`;\n\nconst PostCardTitle = styled(Heading5)`\n  margin: 0 0 ${(props) => props.theme.spacing[2]};\n  word-wrap: break-word;\n`;\n\nconst PostCardMetaContainer = styled.div`\n  padding: ${(props) => props.theme.spacing[4]};\n`;\n\nexport type PostCardProps = BigCardProps & {\n  slug: string;\n  title: string;\n  image: IGatsbyImageData;\n  authors: ReadonlyArray<string | null>;\n  tags: ReadonlyArray<string | null>;\n  date: string;\n  readingTime: string;\n  description: string;\n  trackingCategory: string;\n};\n\nexport const PostCard: FC<PostCardProps> = ({\n  big,\n  slug,\n  title,\n  image,\n  authors,\n  tags,\n  date,\n  readingTime,\n  description,\n  trackingCategory,\n}) => (\n  <PostCardContainer big={big} key={slug}>\n    <A>\n      <PostCardLink\n        to={slug}\n        trackingData={{\n          action: tracking.action.open_blog_post,\n          category: trackingCategory,\n          label: tracking.label.body,\n        }}\n      >\n        <PostCardImage\n          alt={title}\n          image={image}\n          loading={big ? \"eager\" : \"lazy\"}\n          imgStyle={{\n            borderRadius: \"4px 4px 0 0\",\n          }}\n        />\n      </PostCardLink>\n      <PostCardMetaContainer>\n        <PostCardLink\n          to={slug}\n          trackingData={{\n            action: tracking.action.open_blog_post,\n            category: trackingCategory,\n            label: tracking.label.body,\n          }}\n        >\n          <PostCardTitle>{title}</PostCardTitle>\n          <PostAuthors\n            authors={authors}\n            trackingCategory={trackingCategory}\n            trackingLabel={tracking.label.body}\n            enableUrl={false}\n          />\n          <PostMeta date={date} readingTime={readingTime} />\n          <PostDescription>{`${description} [...]`}</PostDescription>\n        </PostCardLink>\n        {tags && (\n          <PostTags\n            tags={tags}\n            trackingCategory={tracking.category.blog_home}\n            trackingLabel={tracking.label.body}\n          />\n        )}\n      </PostCardMetaContainer>\n    </A>\n  </PostCardContainer>\n);\n","import { Tag } from \"./tag\";\nimport styled from \"styled-components\";\nimport { generateTagSlug } from \"../../../logic/slug\";\nimport { FC } from \"react\";\n\nexport interface PostTagsProps {\n  tags: ReadonlyArray<string | null>;\n  trackingCategory: string;\n  trackingLabel: string;\n}\n\nconst PostTagsContainer = styled.div`\n  margin: ${(props) => props.theme.spacing[2]} 0;\n`;\n\nexport const PostTags: FC<PostTagsProps> = ({\n  tags,\n  trackingCategory,\n  trackingLabel,\n}) => (\n  <PostTagsContainer>\n    {tags!.map((tag) => (\n      <Tag\n        tag={tag!}\n        link={generateTagSlug(tag!)}\n        big={false}\n        key={tag}\n        trackingCategory={trackingCategory}\n        trackingLabel={trackingLabel}\n      />\n    ))}\n  </PostTagsContainer>\n);\n\nexport default PostTags;\n","import { FC } from \"react\";\nimport styled from \"styled-components\";\nimport { mediaQuery } from \"../utils-css/media-query\";\nimport { PostCard } from \"./post-card\";\nimport { tracking } from \"../../../logic/tracking\";\nimport { IGatsbyImageData } from \"gatsby-plugin-image\";\n\nconst PostsRowContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  ${mediaQuery.minWidth.md} {\n    flex-direction: row;\n    justify-content: space-between;\n  }\n`;\n\ninterface PostsRowProps {\n  postsGroup: {\n    node: {\n      readonly fields: {\n        readonly slug: string | null;\n        readonly readingTime: { readonly text: string | null } | null;\n      } | null;\n      readonly frontmatter: {\n        readonly title: string | null;\n        readonly description: string | null;\n        readonly authors: ReadonlyArray<string | null> | null;\n        readonly tags: ReadonlyArray<string | null> | null;\n        readonly date: string | null;\n        readonly image: {\n          readonly childImageSharp: {\n            readonly gatsbyImageData: IGatsbyImageData;\n          } | null;\n        } | null;\n      } | null;\n    };\n  }[];\n}\n\nexport const PostsRow: FC<PostsRowProps> = ({ postsGroup }) => (\n  <PostsRowContainer>\n    <PostCard\n      big={false}\n      key={postsGroup[0].node.fields!.slug!}\n      slug={postsGroup[0].node.fields!.slug!}\n      title={postsGroup[0].node.frontmatter!.title!}\n      image={\n        postsGroup[0].node.frontmatter!.image!.childImageSharp!.gatsbyImageData\n      }\n      authors={postsGroup[0].node.frontmatter!.authors!}\n      date={postsGroup[0].node.frontmatter!.date!}\n      readingTime={postsGroup[0].node.fields!.readingTime!.text!}\n      description={postsGroup[0].node.frontmatter!.description!}\n      trackingCategory={tracking.category.blog_home}\n      tags={postsGroup[0].node.frontmatter!.tags!}\n    />\n    {postsGroup[1] && (\n      <PostCard\n        big={false}\n        key={postsGroup[1].node.fields!.slug!}\n        slug={postsGroup[1].node.fields!.slug!}\n        title={postsGroup[1].node.frontmatter!.title!}\n        image={\n          postsGroup[1].node.frontmatter!.image!.childImageSharp!\n            .gatsbyImageData\n        }\n        authors={postsGroup[1].node.frontmatter!.authors!}\n        date={postsGroup[1].node.frontmatter!.date!}\n        readingTime={postsGroup[1].node.fields!.readingTime!.text!}\n        description={postsGroup[1].node.frontmatter!.description!}\n        trackingCategory={tracking.category.blog_home}\n        tags={postsGroup[1].node.frontmatter!.tags!}\n      />\n    )}\n  </PostsRowContainer>\n);\n","import styled, { css } from \"styled-components\";\nimport { FC } from \"react\";\nimport { StandardInternalLinkWithTracking } from \"../../standard-internal-link-with-tracking\";\nimport { tracking } from \"../../../logic/tracking\";\nimport { mediaQuery } from \"../utils-css/media-query\";\n\ninterface TagContentProps {\n  big: boolean;\n}\n\nconst TagLink = styled(StandardInternalLinkWithTracking)<TagContentProps>`\n  display: inline-block;\n  text-decoration: none;\n\n  &:hover {\n    text-decoration: none;\n  }\n\n  ${(props) =>\n    props.big === true &&\n    css`\n      margin-bottom: ${(props) => props.theme.spacing[4]};\n    `}\n`;\n\nconst TagText = styled.span<TagContentProps>`\n  background-color: ${(props) => props.theme.light.primaryColor};\n  color: ${(props) => props.theme.light.textAbovePrimaryColor};\n  margin-right: ${(props) => props.theme.spacing[0]};\n  margin-bottom: ${(props) => props.theme.spacing[0]};\n  border-radius: 3px;\n  font-size: ${(props) =>\n    props.big ? props.theme.fontSizes[5] : props.theme.fontSizes[1]};\n  padding: 0.5px 5px;\n\n  ${(props) =>\n    props.big &&\n    css`\n      display: block;\n      margin-right: ${(props) => props.theme.spacing[4]};\n      margin-bottom: ${(props) => props.theme.spacing[4]};\n    `};\n\n  ${mediaQuery.dark} {\n    background-color: ${(props) => props.theme.dark.primaryColor};\n    color: ${(props) => props.theme.dark.textAbovePrimaryColor};\n  }\n`;\n\nexport type TagProps = TagContentProps & {\n  link: string;\n  tag: string;\n  trackingCategory: string;\n  trackingLabel: string;\n};\n\nexport const Tag: FC<TagProps> = ({\n  tag,\n  link,\n  big,\n  trackingCategory,\n  trackingLabel,\n}) => (\n  <TagLink\n    trackingData={{\n      action: tracking.action.open_blog_tag,\n      category: trackingCategory,\n      label: trackingLabel,\n    }}\n    to={link}\n    big={big}\n  >\n    <TagText big={big}>{tag}</TagText>\n  </TagLink>\n);\n","import { FC } from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { Heading4 } from \"../atoms/heading4\";\nimport styled from \"styled-components\";\nimport { mediaQuery } from \"../utils-css/media-query\";\nimport { useShuffleArray } from \"../hooks/use-shuffle-array\";\nimport { PostsRow } from \"../molecules/posts-row\";\n\nconst ReadNextTitle = styled(Heading4)`\n  margin: ${(props) => props.theme.spacing[2]} 0;\n`;\n\nconst CardsContainer = styled.div`\n  display: block;\n  width: 100%;\n\n  ${mediaQuery.minWidth.md} {\n    display: flex;\n    flex-direction: row;\n  }\n`;\n\nconst ReadNextContainer = styled.div`\n  margin: ${(props) => props.theme.spacing[4]} 0;\n`;\n\nexport interface RecentPostsProps {\n  currentSlug: string;\n}\n\nexport const RecentPosts: FC<RecentPostsProps> = ({ currentSlug }) => {\n  const data = useStaticQuery<Queries.RecentPostsQuery>(graphql`\n    query RecentPosts {\n      allMarkdownRemark(limit: 15, sort: { frontmatter: { date: DESC } }) {\n        edges {\n          node {\n            fields {\n              slug\n              readingTime {\n                text\n              }\n            }\n            frontmatter {\n              title\n              description\n              authors\n              tags\n              date(formatString: \"DD MMM YYYY\")\n              image {\n                childImageSharp {\n                  gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED)\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const readNextPosts = useShuffleArray(\n    data.allMarkdownRemark.edges.filter(\n      (post) => post.node!.fields!.slug !== currentSlug,\n    ),\n  ).slice(0, 2);\n\n  return (\n    <ReadNextContainer>\n      <ReadNextTitle>Read next</ReadNextTitle>\n      <CardsContainer>\n        <PostsRow postsGroup={readNextPosts} />\n      </CardsContainer>\n    </ReadNextContainer>\n  );\n};\n\nexport default RecentPosts;\n","export const useShuffleArray = <T>(array?: T[]): T[] => {\n  if (!array) {\n    return Array<T>(0);\n  }\n\n  let currentIndex = array.length;\n  let randomIndex;\n  const newArray = Array<T>(...array);\n\n  while (currentIndex !== 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n    const elementAtRandomIndex = array[randomIndex];\n    const elementAtCurrentIndex = newArray[currentIndex];\n\n    newArray[currentIndex] = elementAtRandomIndex;\n    newArray[randomIndex] = elementAtCurrentIndex;\n  }\n\n  return newArray;\n};\n","import styled from \"styled-components\";\nimport { standardLinkStyle } from \"./standard-link-style\";\nimport { Link } from \"gatsby\";\n\nexport const StandardInternalLink = styled(Link)`\n  ${standardLinkStyle}\n`;\n","import { FC, ReactNode } from \"react\";\nimport { TrackingElementProps, trackWith } from \"../logic/tracking\";\nimport { StandardInternalLink } from \"./design-system/atoms/standard-internal-link\";\n\ntype StandardInternalLinkWithTrackingProps = TrackingElementProps & {\n  to: string;\n  className?: string;\n  children?: ReactNode;\n};\n\nexport const StandardInternalLinkWithTracking: FC<StandardInternalLinkWithTrackingProps> =\n  ({ children, className, to, trackingData }) => (\n    <StandardInternalLink\n      className={className}\n      to={to}\n      onClick={() => {\n        trackWith(trackingData);\n      }}\n    >\n      {children}\n    </StandardInternalLink>\n  );\n"],"names":["Heading5","styled","h5","withConfig","displayName","componentId","props","theme","fontSizes","headingStyle","PostDescription","Paragraph","PostCardContainer","div","spacing","light","generalBackgroundLight","boxShadowLight","mediaQuery","minWidth","md","inputDevice","mouse","big","css","dark","PostCardImage","GatsbyImage","sm","gatsbyImagePlaceholderSelector","A","PostCardLink","StandardInternalLinkWithTracking","PostCardTitle","PostCardMetaContainer","PostCard","_ref","slug","title","image","authors","tags","date","readingTime","description","trackingCategory","_jsx","children","_jsxs","to","trackingData","action","tracking","open_blog_post","category","label","body","alt","loading","imgStyle","borderRadius","PostAuthors","trackingLabel","enableUrl","PostMeta","PostTags","blog_home","PostTagsContainer","map","tag","Tag","link","generateTagSlug","PostsRowContainer","PostsRow","postsGroup","node","fields","frontmatter","childImageSharp","gatsbyImageData","text","TagLink","TagText","span","primaryColor","textAbovePrimaryColor","open_blog_tag","ReadNextTitle","Heading4","CardsContainer","ReadNextContainer","RecentPosts","currentSlug","readNextPosts","array","Array","randomIndex","currentIndex","length","newArray","apply","_toConsumableArray","Math","floor","random","elementAtRandomIndex","elementAtCurrentIndex","useShuffleArray","useStaticQuery","allMarkdownRemark","edges","filter","post","slice","StandardInternalLink","Link","standardLinkStyle","className","onClick","trackWith"],"sourceRoot":""}
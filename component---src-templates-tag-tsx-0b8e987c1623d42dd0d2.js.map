{"version":3,"file":"component---src-templates-tag-tsx-0b8e987c1623d42dd0d2.js","mappings":"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","sources":["webpack://fabrizioduroni.it/./src/components/design-system/atoms/heading1.tsx","webpack://fabrizioduroni.it/./src/components/design-system/atoms/time.tsx","webpack://fabrizioduroni.it/./src/components/design-system/molecules/page-title.tsx","webpack://fabrizioduroni.it/./src/components/design-system/templates/blog-generic-post-list-page-template.tsx","webpack://fabrizioduroni.it/./src/components/design-system/atoms/standard-internal-link.tsx","webpack://fabrizioduroni.it/./src/components/standard-internal-link-with-tracking.tsx","webpack://fabrizioduroni.it/./src/templates/tag.tsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { headingStyle } from \"./heading-style\";\n\nexport const Heading1 = styled.h1`\n  font-size: ${(props) => props.theme.fontSizes[12]};\n  ${headingStyle}\n`;\n","import styled from \"styled-components\";\nimport { mediaQuery } from \"../utils-css/media-query\";\n\nexport const Time = styled.time`\n  color: ${(props) => props.theme.light.secondaryTextColor};\n\n  ${mediaQuery.dark} {\n    color: ${(props) => props.theme.dark.secondaryTextColor};\n  }\n`;\n","import styled from \"styled-components\";\nimport { Heading1 } from \"../atoms/heading1\";\n\nexport const PageTitle = styled(Heading1)`\n  margin-left: 0;\n  margin-right: 0;\n  margin-bottom: ${(props) => props.theme.spacing[4]};\n`;\n","import styled from \"styled-components\";\nimport { ContainerFluid } from \"../atoms/container-fluid\";\nimport { Time } from \"../atoms/time\";\nimport {\n  MarkdownRemarkFields,\n  MarkdownRemarkFrontmatter,\n  Maybe,\n} from \"../../../../graphql-types\";\nimport { FC } from \"react\";\nimport { BlogPageTemplate } from \"./blog-page-template\";\nimport { tracking } from \"../../../logic/tracking\";\nimport { PageTitle } from \"../molecules/page-title\";\nimport { OgPageType } from \"../../../logic/seo\";\nimport { CurrentLocation } from \"../../../logic/current-location\";\nimport { StandardInternalLinkWithTracking } from \"../../standard-internal-link-with-tracking\";\nimport { mediaQuery } from \"../utils-css/media-query\";\n\nconst PostContainer = styled(ContainerFluid)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-bottom: ${(props) => props.theme.spacing[3]};\n  padding-left: 0;\n  padding-right: 0;\n\n  ${mediaQuery.minWidth.md} {\n    flex-direction: row;\n    align-items: center;\n  }\n`;\n\ninterface ColumnProps {\n  size: string;\n}\n\nconst Column = styled.div<ColumnProps>`\n  ${mediaQuery.minWidth.md} {\n    flex: ${(props) => props.size};\n  }\n`;\n\nconst PostTime = styled(Time)`\n  font-size: ${(props) => props.theme.fontSizes[4]};\n`;\n\nconst PostLink = styled(StandardInternalLinkWithTracking)`\n  font-size: ${(props) => props.theme.fontSizes[4]};\n`;\n\nexport interface BlogGenericPostListPageProps {\n  title: string;\n  posts: Array<{\n    node: {\n      fields?: Maybe<Pick<MarkdownRemarkFields, \"slug\">>;\n      frontmatter?: Maybe<Pick<MarkdownRemarkFrontmatter, \"date\" | \"title\">>;\n    };\n  }>;\n  author: string;\n  location: CurrentLocation;\n  ogPageType: OgPageType;\n  ogImage: string;\n  trackingCategory: string;\n}\n\nexport const BlogGenericPostListPageTemplate: FC<BlogGenericPostListPageProps> =\n  ({\n    title,\n    posts,\n    author,\n    location,\n    ogPageType,\n    ogImage,\n    trackingCategory,\n  }) => (\n    <BlogPageTemplate\n      location={location}\n      author={author}\n      ogPageType={ogPageType}\n      ogImage={ogImage}\n      trackingCategory={trackingCategory}\n    >\n      <PageTitle>{title}</PageTitle>\n      {posts.map((post) => (\n        <PostContainer key={post.node.fields!.slug!}>\n          <Column size={\"15%\"}>\n            <PostTime>{post.node.frontmatter?.date}</PostTime>\n          </Column>\n          <Column size={\"85%\"}>\n            <PostLink\n              to={post.node.fields!.slug!}\n              trackingData={{\n                action: tracking.action.open_blog_post,\n                category: trackingCategory,\n                label: tracking.label.body,\n              }}\n            >\n              {post.node.frontmatter?.title}\n            </PostLink>\n          </Column>\n        </PostContainer>\n      ))}\n    </BlogPageTemplate>\n  );\n","import styled from \"styled-components\";\nimport { standardLinkStyle } from \"./standard-link-style\";\nimport { Link } from \"gatsby\";\n\nexport const StandardInternalLink = styled(Link)`\n  ${standardLinkStyle}\n`;\n","import { FC, ReactNode } from \"react\";\nimport { TrackingElementProps, trackWith } from \"../logic/tracking\";\nimport { StandardInternalLink } from \"./design-system/atoms/standard-internal-link\";\n\ntype StandardInternalLinkWithTrackingProps = TrackingElementProps & {\n  to: string;\n  className?: string;\n  children?: ReactNode;\n};\n\nexport const StandardInternalLinkWithTracking: FC<StandardInternalLinkWithTrackingProps> =\n  ({ children, className, to, trackingData }) => (\n    <StandardInternalLink\n      className={className}\n      to={to}\n      onClick={() => {\n        trackWith(trackingData);\n      }}\n    >\n      {children}\n    </StandardInternalLink>\n  );\n","import { FC } from \"react\";\nimport { graphql, PageProps } from \"gatsby\";\nimport { tracking } from \"../logic/tracking\";\nimport { TagPostsQuery } from \"../../graphql-types\";\nimport { BlogGenericPostListPageTemplate } from \"../components/design-system/templates/blog-generic-post-list-page-template\";\nimport { OgPageType } from \"../logic/seo\";\nimport { getCurrentLocationFrom } from \"../logic/current-location\";\n\ninterface TagPageContext {\n  tag: string;\n}\n\nconst Tag: FC<PageProps<TagPostsQuery, TagPageContext>> = ({\n  data,\n  pageContext,\n  location,\n}) => {\n  const siteMetadata = data.site!.siteMetadata!;\n  const author = siteMetadata.author!;\n  const featuredImage = siteMetadata.featuredImage!;\n  const { edges, totalCount } = data.allMarkdownRemark;\n  const tagHeader = `${pageContext.tag} (${totalCount})`;\n\n  return (\n    <BlogGenericPostListPageTemplate\n      title={tagHeader}\n      posts={edges}\n      author={author}\n      location={getCurrentLocationFrom(location)}\n      ogPageType={OgPageType.WebSite}\n      ogImage={featuredImage}\n      trackingCategory={tracking.category.blog_tag}\n    />\n  );\n};\n\nexport default Tag;\n\nexport const pageQuery = graphql`\n  query TagPosts($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"DD MMM YYYY\")\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        author\n        featuredImage\n      }\n    }\n  }\n`;\n"],"names":["Heading1","styled","props","theme","fontSizes","headingStyle","Time","light","secondaryTextColor","mediaQuery","dark","PageTitle","withConfig","spacing","PostContainer","ContainerFluid","Column","size","PostTime","PostLink","StandardInternalLinkWithTracking","BlogGenericPostListPageTemplate","title","posts","author","location","ogPageType","ogImage","trackingCategory","_jsxs","BlogPageTemplate","_jsx","map","post","node","frontmatter","_post$node$frontmatte","date","to","fields","slug","trackingData","action","tracking","category","label","_post$node$frontmatte2","StandardInternalLink","Link","standardLinkStyle","children","className","onClick","trackWith","data","pageContext","siteMetadata","site","featuredImage","allMarkdownRemark","edges","totalCount","tagHeader","tag","getCurrentLocationFrom","OgPageType"],"sourceRoot":""}